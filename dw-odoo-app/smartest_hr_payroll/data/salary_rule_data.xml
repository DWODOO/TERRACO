<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="0">
        <!--********************************************CREATE RULES********************************************-->

        <!--********************************* Rules ***********************************-->
        <record id="salary_rule_assiette_cotisable" model="hr.salary.rule">
            <field name="name">Assiette Cotisable</field>
            <field name="sequence" eval="500"/>
            <field name="code">R400</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.cot+categories.cot_10</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_perfect_depends"></field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_assiette_imposable" model="hr.salary.rule">
            <field name="name">Assiette Imposable</field>
            <field name="sequence" eval="700"/>
            <field name="code">R501</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.imp+categories.imp_10</field>
            <field name="smartest_perfect_depends"></field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_assiette_cotisable_perfect" model="hr.salary.rule">
            <field name="name">Assiette Cotisable Base cas Parfait</field>
            <field name="sequence" eval="500"/>
            <field name="code">R400_perfect</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result=contract.env.context.get('smartest_case_perfect', False)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.cot</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_assiette_imposable_perfect" model="hr.salary.rule">
            <field name="name">Assiette Imposable Base cas Parfait</field>
            <field name="sequence" eval="700"/>
            <field name="code">R501_perfect</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result=contract.env.context.get('smartest_case_perfect', False)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.imp</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_net" model="hr.salary.rule">
            <field name="name">Net</field>
            <field name="sequence" eval="1500"/>
            <field name="code">NET</field>
            <field name="category_id" ref="smartest_hr_payroll.net_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.net</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <!--**************************** Contributory **********************************-->

        <record id="salary_rule_base_with_out_contract" model="hr.salary.rule">
            <field name="name">Base</field>
            <field name="sequence" eval="1"/>
            <field name="code">BASIC</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.wage</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_base_regulation_restraint" model="hr.salary.rule">
            <field name="name">Base regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="2"/>
            <field name="code">R002</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I002 and inputs.I002.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I002.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_base_regulation_gain" model="hr.salary.rule">
            <field name="name">Base regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="3"/>
            <field name="code">R003</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I003 and inputs.I003.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I003.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
  <record id="salary_rule_base_regulation_restraint_per_days" model="hr.salary.rule">
            <field name="name">Base regulation Per Days (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="2"/>
            <field name="code">R002D</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I002D and inputs.I002D.smartest_number_of_days)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">total_days = 30 if inputs.I002D.smartest_paid_in_calendar else payslip.smartest_theoretic_worked_days
result = -contract.wage/total_days * inputs.I002D.smartest_number_of_days
</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_base_regulation_gain_per_days" model="hr.salary.rule">
            <field name="name">Base regulation Per Days (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="3"/>
            <field name="code">R003D</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I003D and inputs.I003D.smartest_number_of_days)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">total_days = 30 if inputs.I003D.smartest_paid_in_calendar else payslip.smartest_theoretic_worked_days
result = -contract.wage/total_days * inputs.I003D.smartest_number_of_days</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_pre_base" model="hr.salary.rule">
            <field name="name">Pre Base</field>
            <field name="sequence" eval="810"/>
            <field name="code">PRE_BASIC</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.pre_wage</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.pre_wage</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_pre_base_regulation_restraint" model="hr.salary.rule">
            <field name="name">Pre Base regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="810"/>
            <field name="code">R006</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I006 and inputs.I006.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I006.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_pre_base_regulation_gain" model="hr.salary.rule">
            <field name="name">Pre Base regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="810"/>
            <field name="code">R007</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I007 and inputs.I007.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I007.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_absence_hours" model="hr.salary.rule">
            <field name="name">Absence HR</field>
            <field name="sequence" eval="3"/>
            <field name="code">ABS_HOURS</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
                        <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.ABS_HOURS</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.ABS_HOURS.amount/worked_days.ABS_HOURS.number_of_hours</field>
            <field name="quantity">- abs(worked_days.ABS_HOURS.number_of_hours)</field>
            <field name="amount_percentage" eval="100"/>
            <field name="smartest_is_absence">True</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_absence_days" model="hr.salary.rule">
            <field name="name">Absence DAY</field>
            <field name="sequence" eval="3"/>
            <field name="code">ABS_DAYS</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.ABS_DAYS</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.ABS_DAYS.amount/worked_days.ABS_DAYS.number_of_days</field>
            <field name="quantity">- abs(worked_days.ABS_DAYS.number_of_days)</field>
            <field name="amount_percentage" eval="100"/>
            <field name="smartest_is_absence">True</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_absence_punish" model="hr.salary.rule">
            <field name="name">Absence punish</field>
            <field name="sequence" eval="23"/>
            <field name="code">R023</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =worked_days.ABS_PNS</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.ABS_PNS.amount/worked_days.ABS_PNS.number_of_days</field>
            <field name="quantity">- abs(worked_days.ABS_PNS.number_of_days)</field>
            <field name="appears_on_payslip" eval="True"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_is_absence">True</field>
        </record>
        <record id="salary_rule_absence_punish_regulation_restraint" model="hr.salary.rule">
            <field name="name">Absence punish regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="24"/>
            <field name="code">R024</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I024 and inputs.I024.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I024.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

        </record>
        <record id="salary_rule_absence_punish_regulation_gain" model="hr.salary.rule">
            <field name="name">Absence punish regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="25"/>
            <field name="code">R025</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I025 and inputs.I025.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I025.amount)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

        </record>

        <record id="salary_rule_absence_regulation_restraint" model="hr.salary.rule">
            <field name="name">Absence regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="11"/>
            <field name="code">R011</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I011 and inputs.I011.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I012.amount)</field>
            <field name="smartest_is_absence">True</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_absence_regulation_gain" model="hr.salary.rule">
            <field name="name">Absence regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="12"/>
            <field name="code">R012</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I012 and inputs.I012.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I012.amount)</field>
            <field name="smartest_is_absence">True</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_out_of_contract" model="hr.salary.rule">
            <field name="name">Out of contract</field>
            <field name="sequence" eval="45"/>
            <field name="code">R045</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =worked_days.OUT and worked_days.OUT.number_of_days</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage/payslip.smartest_theoretic_worked_days if not worked_days.OUT.work_entry_type_id.smartest_paid_in_calendar else contract.wage/30</field>
            <field name="quantity">- abs(worked_days.OUT.number_of_days)</field>
            <field name="appears_on_payslip" eval="True"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_is_absence">True</field>
        </record>
        <record id="salary_rule_out_of_contract_regulation_restraint" model="hr.salary.rule">
            <field name="name">Out of contract regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="46"/>
            <field name="code">R046</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I046 and inputs.I046.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I046.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>
        <record id="salary_rule_out_of_contract_regulation_gain" model="hr.salary.rule">
            <field name="name">Out of contract regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="47"/>
            <field name="code">R047</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I047 and inputs.I047.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I047.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>
        <record id="salary_rule_sick_leave" model="hr.salary.rule">
            <field name="name">Sick Leave</field>
            <field name="sequence" eval="22"/>
            <field name="code">R022</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.LEAVE110 and worked_days.LEAVE110.number_of_days</field>
            <field name="amount_percentage" eval="100"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.LEAVE110.amount/worked_days.LEAVE110.number_of_days</field>
            <field name="quantity">- abs(worked_days.LEAVE110.number_of_days)</field>
            <field name="smartest_is_absence">True</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_legal_leave" model="hr.salary.rule">
            <field name="name">Legal Leave</field>
            <field name="sequence" eval="22"/>
            <field name="code">R02</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.LEGAL_LEAVE and worked_days.LEGAL_LEAVE.number_of_days</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.LEGAL_LEAVE.amount/worked_days.LEGAL_LEAVE.number_of_days</field>
            <field name="quantity">- abs(worked_days.LEGAL_LEAVE.number_of_days)</field>
            <field name="smartest_is_absence">True</field>
             <field name="amount_percentage" eval="100"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
              <record id="salary_rule_indmnite_leave" model="hr.salary.rule">
            <field name="name">Indemnité Leave</field>
            <field name="sequence" eval="22"/>
            <field name="code">R22</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.LEGAL_LEAVE</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result =  abs(inputs.LEGAL_LEAVE.amount)</field>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_all_account_balance" model="hr.salary.rule">
            <field name="name">All account balance</field>
            <field name="sequence" eval="30"/>
            <field name="code">R030</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I030 and inputs.I030.amount)</field>
            <field name="amount_select">code</field>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="amount_python_compute">result = abs(inputs.I030.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
          <record id="paid_annual_leave" model="hr.salary.rule">
            <field name="name">Paid annual leave</field>
            <field name="sequence" eval="29"/>
            <field name="code">R029</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I029 and inputs.I029.amount)</field>
            <field name="amount_select">code</field>
              <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="amount_python_compute">result = abs(inputs.I029.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_paid_annual_leave_regulation_restraint" model="hr.salary.rule">
            <field name="name">Paid annual leave regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="31"/>
            <field name="code">R031</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I031 and inputs.I031.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I031.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_paid_annual_leave_regulation_gain" model="hr.salary.rule">
            <field name="name">Paid annual leave regulation(+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="32"/>
            <field name="code">R032</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I032 and inputs.I032.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I032.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="allowance_risk" model="hr.salary.rule">
            <field name="name">Allowance Risk</field>
            <field name="sequence" eval="35"/>
            <field name="code">R035</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_risk</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_risk_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_risk_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_risk_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_risk",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_allowance_risk_regulation_restraint" model="hr.salary.rule">
             <field name="name">Allowance Risk regulation(-)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="36"/>
             <field name="code">R036</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I036 and inputs.I036.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I036.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_allowance_risk_regulation_gain" model="hr.salary.rule">
             <field name="name">Allowance Risk regulation(+)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="37"/>
             <field name="code">R037</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I037 and inputs.I037.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I037.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="allowance_master_apprentice" model="hr.salary.rule">
             <field name="name">Allowance Master Apprentice</field>
             <field name="sequence" eval="40"/>
             <field name="code">R040</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = contract.allowance_master_apprentice</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_master_apprentice_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_master_apprentice_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_master_apprentice_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_master_apprentice",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
           <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_master_apprentice_regulation_restraint" model="hr.salary.rule">
            <field name="name">Allowance Master Apprentice regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="41"/>
            <field name="code">R041</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I041 and inputs.I041.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I041.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_master_apprentice_regulation_gain" model="hr.salary.rule">
            <field name="name">Allowance master_apprentice regulation(+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="42"/>
            <field name="code">R042</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I042 and inputs.I042.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I042.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_learning_tax" model="hr.salary.rule">
            <field name="name">Learning tax</field>
            <field name="sequence" eval="910"/>
            <field name="code">R910</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="1"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_training_tax" model="hr.salary.rule">
            <field name="name">Training tax</field>
            <field name="sequence" eval="905"/>
            <field name="code">R900</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="1"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_social_works_contribution" model="hr.salary.rule">
            <field name="name">Social works contribution</field>
            <field name="sequence" eval="920"/>
            <field name="code">R920</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="2"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_employer_contribution" model="hr.salary.rule">
            <field name="name">Employer contribution restraint</field>
            <field name="sequence" eval="506"/>
            <field name="code">R404</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">none</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R400</field>
            <field name="quantity">-employee.cnas_patronage_contribution / 100</field>
            <field name="amount_percentage" eval="100"/>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_contribution" model="hr.salary.rule">
            <field name="name">Contribution restraint</field>
            <field name="sequence" eval="505"/>
            <field name="code">R401</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.cot</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="9"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_is_ss">True</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_contribution10" model="hr.salary.rule">
            <field name="name">Contribution restraint 10%</field>
            <field name="sequence" eval="507"/>
            <field name="code">R407</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.cot_10)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(categories.cot_10)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="-9"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_is_ss">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>


        <!--***************** COTISABLE *******************************-->
        <record id="salary_rule_allowance_responsability" model="hr.salary.rule">
            <field name="name">Responsibility allowance</field>
            <field name="sequence" eval="210"/>
            <field name="code">R110</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_responsibility</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_responsibility_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_responsibility_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_responsibility_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_responsibility",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_responsibility_regulation_restraint" model="hr.salary.rule">
            <field name="name">Responsibility allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="211"/>
            <field name="code">R211</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I211 and inputs.I211.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I211.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_responsibility_regulation_gain" model="hr.salary.rule">
            <field name="name">Responsibility allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="212"/>
            <field name="code">R212</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I212 and inputs.I212.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I212.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_nuisance" model="hr.salary.rule">
            <field name="name">Nuisance allowance</field>
            <field name="sequence" eval="220"/>
            <field name="code">R220</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_nuisance</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_nuisance_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_nuisance_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_nuisance_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_nuisance",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
                        <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
        </record>
       <record id="salary_rule_rappel_sur_salaire_jour" model="hr.salary.rule">
            <field name="name">Rappel sur Salaire en jours</field>
            <field name="sequence" eval="115"/>
            <field name="code">R115</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.I00104 and inputs.I00104.amount</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage/30 if inputs.I00104.is_calendar else contract.wage / payslip.smartest_theoretic_worked_days </field>
            <field name="quantity"> abs(inputs.I00104.amount)</field>
            <field name="amount_percentage" eval="100"/>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_22_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2022</field>
            <field name="sequence" eval="115"/>
            <field name="code">R717</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_22</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_22.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_23_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2023</field>
            <field name="sequence" eval="115"/>
            <field name="code">R0718</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_23</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_23.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_17_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2017</field>
            <field name="sequence" eval="115"/>
            <field name="code">R716</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_17</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_17.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_18_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2018</field>
            <field name="sequence" eval="115"/>
            <field name="code">R718</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_18</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_18.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_19_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2019</field>
            <field name="sequence" eval="115"/>
            <field name="code">R719</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_19</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_19.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_20_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2020</field>
            <field name="sequence" eval="115"/>
            <field name="code">R720</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_20</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_20.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_21_jour" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2021</field>
            <field name="sequence" eval="115"/>
            <field name="code">R721</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_21</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_21.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_22_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2022 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R717</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_22D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_22D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_23_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2023 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R0718</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_23D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_23D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_17_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2017 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R716</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_17D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_17D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_18_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2018 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R718</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_18D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_18D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_19_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2019 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R719</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_19D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_19D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_20_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2020 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R720</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_20D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_20D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_ica_21_per_days" model="hr.salary.rule">
            <field name="name">I.C.A EXERCICE 2021 </field>
            <field name="sequence" eval="115"/>
            <field name="code">R721</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.ica_21D</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs( inputs.ica_21D.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
       <record id="salary_rule_regul_absence_gain" model="hr.salary.rule">
            <field name="smartest_is_regul">True</field>
<field name="name">Regul ABSENCE (+)</field>
            <field name="sequence" eval="116"/>
            <field name="code">R116</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.I00105 and inputs.I00105.amount</field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage/30 if inputs.I00105.smartest_paid_in_calendar else contract.wage / payslip.smartest_theoretic_worked_days </field>
            <field name="quantity"> abs(inputs.I00105.amount)</field>
           <field name="amount_percentage" eval="100"/>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
        <record id="salary_rule_regul_absence_restraint" model="hr.salary.rule">
            <field name="smartest_is_regul">True</field>
<field name="name">Regul ABSENCE (-)</field>
            <field name="sequence" eval="117"/>
            <field name="code">R117</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.I00106 and inputs.I00106.amount</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage/30 if inputs.I00106.smartest_paid_in_calendar else contract.wage / payslip.smartest_theoretic_worked_days </field>
            <field name="quantity"> -abs(inputs.I00106.amount)</field>
           <field name="amount_percentage" eval="100"/>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
           <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
        </record>
        <record id="salary_rule_allowance_nuisance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Nuisance allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="221"/>
            <field name="code">R221</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I221 and inputs.I221.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I221.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_nuisance_regulation_gain" model="hr.salary.rule">
            <field name="name">Nuisance allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="222"/>
            <field name="code">R222</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I222 and inputs.I222.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I222.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_availability" model="hr.salary.rule">
            <field name="name">Availability allowance</field>
            <field name="sequence" eval="230"/>
            <field name="code">R230</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_availability</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_availability_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_availability_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_availability_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_availability",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_availability_regulation_restraint" model="hr.salary.rule">
            <field name="name">Availability allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="231"/>
            <field name="code">R231</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I231 and inputs.I231.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I231.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_availability_regulation_gain" model="hr.salary.rule">
            <field name="name">Availability allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="232"/>
            <field name="code">R232</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I232 and inputs.I232.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I232.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_in_iep" model="hr.salary.rule">
            <field name="name">IEP allowance (IN)</field>
            <field name="sequence" eval="240"/>
            <field name="code">R240</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =(contract.allowance_in_iep and worked_days.WORK100 and worked_days.WORK100.number_of_days)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_in_iep_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_in_iep_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_in_iep_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_in_iep",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_in_iep_regulation_restraint" model="hr.salary.rule">
            <field name="name">IEP allowance (IN) allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="241"/>
            <field name="code">R241</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I241 and inputs.I241.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I241.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_in_iep_regulation_gain" model="hr.salary.rule">
            <field name="name">IEP allowance (IN) allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="242"/>
            <field name="code">R242</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I242 and inputs.I242.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I242.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_out_iep_regulation_restraint" model="hr.salary.rule">
            <field name="name">IEP allowance (OUT) allowance regulation (-)</field>
            <field name="smartest_is_regul">True</field>
            <field name="sequence" eval="251"/>
            <field name="code">R251</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I251 and inputs.I251.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I251.amount)</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_out_iep_regulation_gain" model="hr.salary.rule">
            <field name="name">IEP allowance (OUT) allowance regulation (+)</field>
            <field name="smartest_is_regul">True</field>
            <field name="sequence" eval="252"/>
            <field name="code">R252</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I252 and inputs.I252.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I252.amount)</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isp" model="hr.salary.rule">
            <field name="name">ISP allowance</field>
            <field name="sequence" eval="260"/>
            <field name="code">R260</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_isp</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_isp_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_isp_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_isp_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_isp",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isp_regulation_restraint" model="hr.salary.rule">
            <field name="name">ISP allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="261"/>
            <field name="code">R261</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I261 and inputs.I261.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I261.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isp_regulation_gain" model="hr.salary.rule">
            <field name="name">ISP allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="262"/>
            <field name="code">R262</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I262 and inputs.I262.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I262.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_performance" model="hr.salary.rule">
            <field name="name">Prime de Performance</field>
            <field name="sequence" eval="270"/>
            <field name="code">R270</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_soiling</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_soiling_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_soiling_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_soiling_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_soiling",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
            <field name="active" eval="False"/>
        </record>
        <record id="salary_rule_allowance_performance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Performance allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="271"/>
            <field name="code">R271</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I271 and inputs.I271.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I271.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_performance_regulation_gain" model="hr.salary.rule">
            <field name="name">Performance allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="272"/>
            <field name="code">R272</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I272 and inputs.I272.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I272.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_50" model="hr.salary.rule">
            <field name="name">Additional Hours (50%)</field>
            <field name="sequence" eval="6"/>
            <field name="code">R280</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100 and worked_days.H50 and worked_days.H50.number_of_hours
            </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.H50.amount</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="150"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_depends</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_50_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (50%) allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="281"/>
            <field name="code">R281</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I281 and inputs.I281.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I281.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_50_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (50%) allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="282"/>
            <field name="code">R282</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I282 and inputs.I282.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I282.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_additional_hours_100" model="hr.salary.rule">
            <field name="name">Additional Hours (100%)</field>
            <field name="sequence" eval="7"/>
            <field name="code">R700</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100 and worked_days.H100 and worked_days.H100.number_of_hours
            </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.H100.amount</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="200"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_depends</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_100_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (100%) allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="291"/>
            <field name="code">R291</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I291 and inputs.I291.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I291.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_100_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (100%) allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="292"/>
            <field name="code">R292</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I292 and inputs.I292.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I292.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_75" model="hr.salary.rule">
            <field name="name">Additional Hours (75%)</field>
            <field name="sequence" eval="7"/>
            <field name="code">R285</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100 and worked_days.H75
            </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">worked_days.H75.amount</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="175"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_perfect_depends">perfect_depends</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_75_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (75%) allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="291"/>
            <field name="code">R286</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I291 and inputs.I291.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I291.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_additional_hours_75_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (75%) allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="292"/>
            <field name="code">R287</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I292 and inputs.I292.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I292.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_pop" model="hr.salary.rule">
            <field name="name">P.O.P allowance</field>
            <field name="sequence" eval="300"/>
            <field name="code">R300</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_pop and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_pop_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_pop_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_pop_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_pop",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_pop_regulation_restraint" model="hr.salary.rule">
            <field name="name">P.O.P allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="301"/>
            <field name="code">R301</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I301 and inputs.I301.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I301.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_pop_regulation_gain" model="hr.salary.rule">
            <field name="name">P.O.P allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="302"/>
            <field name="code">R302</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I302 and inputs.I302.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I302.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_pap" model="hr.salary.rule">
            <field name="name">P.A.P allowance</field>
            <field name="sequence" eval="310"/>
            <field name="code">R310</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_pap  and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_pap_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_pap_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_pap_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_pap",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_pap_regulation_restraint" model="hr.salary.rule">
            <field name="name">P.A.P allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="311"/>
            <field name="code">R311</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I311 and inputs.I311.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I311.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_pap_regulation_gain" model="hr.salary.rule">
            <field name="name">P.A.P allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="312"/>
            <field name="code">R312</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I312 and inputs.I312.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I312.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_hse" model="hr.salary.rule">
            <field name="name">H.S.E allowance</field>
            <field name="sequence" eval="320"/>
            <field name="code">R320</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_hse  and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_hse_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_hse_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_hse_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_hse",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_hse_regulation_restraint" model="hr.salary.rule">
            <field name="name">H.S.E allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="321"/>
            <field name="code">R321</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I321 and inputs.I321.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I321.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_hse_regulation_gain" model="hr.salary.rule">
            <field name="name">H.S.E allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="322"/>
            <field name="code">R322</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I322 and inputs.I322.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I322.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_iff" model="hr.salary.rule">
            <field name="name">I.F.F allowance</field>
            <field name="sequence" eval="330"/>
            <field name="code">R330</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_iff and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_iff_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_iff_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_iff_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_iff",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_iff_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.F.F allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="331"/>
            <field name="code">R331</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I331 and inputs.I331.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I331.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_iff_regulation_gain" model="hr.salary.rule">
            <field name="name">I.F.F allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="332"/>
            <field name="code">R332</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I332 and inputs.I332.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I332.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_ifsp" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance</field>
            <field name="sequence" eval="340"/>
            <field name="code">R340</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_ifsp and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_ifsp_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_ifsp_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_ifsp_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_ifsp",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_ifsp_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="341"/>
            <field name="code">R341</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I341 and inputs.I341.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I341.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_ifsp_regulation_gain" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="342"/>
            <field name="code">R342</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I342 and inputs.I342.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I342.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_itp" model="hr.salary.rule">
            <field name="name">I.T.P allowance</field>
            <field name="sequence" eval="350"/>
            <field name="code">R350</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_itp and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_itp_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_itp_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_itp_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_itp",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_itp_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.T.P allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="351"/>
            <field name="code">R351</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I351 and inputs.I351.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I351.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_itp_regulation_gain" model="hr.salary.rule">
            <field name="name">I.T.P allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="352"/>
            <field name="code">R352</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I352 and inputs.I352.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I352.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_cash" model="hr.salary.rule">
            <field name="name">Cash allowance</field>
            <field name="sequence" eval="353"/>
            <field name="code">R353</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_cash  and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_cash_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_cash_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_cash_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_cash",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_cash_regulation_restraint" model="hr.salary.rule">
            <field name="name">Cash allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="351"/>
            <field name="code">R354</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I354 and inputs.I354.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I354.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_cash_regulation_gain" model="hr.salary.rule">
            <field name="name">Cash allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="354"/>
            <field name="code">R355</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I355 and inputs.I355.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I355.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_allowance_interim" model="hr.salary.rule">
            <field name="name">Interim allowance</field>
            <field name="sequence" eval="356"/>
            <field name="code">R356</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I356 and inputs.I356.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I356.amount)</field>
                          <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_interim_regulation_restraint" model="hr.salary.rule">
            <field name="name">Interim allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="357"/>
            <field name="code">R357</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I357 and inputs.I357.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I357.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_interim_regulation_gain" model="hr.salary.rule">
            <field name="name">Interim allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="358"/>
            <field name="code">R358</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I358 and inputs.I358.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I358.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_bonus" model="hr.salary.rule">
            <field name="name">Yield allowance</field>
            <field name="sequence" eval="360"/>
            <field name="code">R360</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
             <field name="smartest_perfect_depends"></field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I360 and inputs.I360.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I360.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
                          <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_bonus_regulation_restraint" model="hr.salary.rule">
            <field name="name">Yield allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="361"/>
            <field name="code">R361</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
             <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I361 and inputs.I361.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I361.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_bonus_regulation_gain" model="hr.salary.rule">
            <field name="name">Yield allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="362"/>
            <field name="code">R362</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I362 and inputs.I362.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I362.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>



        <record id="salary_rule_bilan" model="hr.salary.rule">
             <field name="name">Bilan allowance </field>
             <field name="sequence" eval="375"/>
             <field name="code">R375</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="smartest_perfect_depends"></field>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I375 and inputs.I375.amount)</field>
             <field name="amount_select">percentage</field>
             <field name="amount_percentage_base"> abs(inputs.I375.amount)</field>
             <field name="quantity">1</field>
             <field name="amount_percentage" eval="100"/>
             <field name="appears_on_payslip" eval="True"/>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
        </record>
          <record id="salary_rule_bilan_regulation_restraint" model="hr.salary.rule">
             <field name="name">Bilan allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="376"/>
             <field name="code">R376</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I376 and inputs.I376.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I376.amount)</field>
                          <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>
         <record id="salary_rule_bilan_regulation_gain" model="hr.salary.rule">
             <field name="name">Bilan allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="377"/>
             <field name="code">R377</field>
             <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I377 and inputs.I377.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I377.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>


        <record id="salary_rule_inventory" model="hr.salary.rule">
            <field name="name">Inventory allowance </field>
            <field name="sequence" eval="363"/>
            <field name="code">R363</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="smartest_perfect_depends"></field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I363 and inputs.I363.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I363.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_inventory_regulation_restraint" model="hr.salary.rule">
            <field name="name">Inventory allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="364"/>
            <field name="code">R364</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I364 and inputs.I364.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I364.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_inventory_regulation_gain" model="hr.salary.rule">
            <field name="name">Inventory allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="365"/>
            <field name="code">R365</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I365 and inputs.I365.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I365.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
    <record id="salary_rule_exceptional" model="hr.salary.rule">
            <field name="name">Exceptional allowance</field>
            <field name="sequence" eval="697"/>
            <field name="code">R415</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
        <field name="smartest_perfect_depends"></field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I415 and inputs.I415.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I415.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_exceptional_regulation_restraint" model="hr.salary.rule">
            <field name="name">Exceptional allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="698"/>
            <field name="code">R416</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I416 and inputs.I416.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I416.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_exceptional_regulation_gain" model="hr.salary.rule">
            <field name="name">Exceptional allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="699"/>
            <field name="code">R417</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I417 and inputs.I417.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I417.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <!--   CACOBAPTH     -->
        <record id="salary_rule_employer_cacobapth" model="hr.salary.rule">
            <field name="name">Employer cacobapth restraint</field>
            <field name="sequence" eval="520"/>
            <field name="code">R390</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="smartest_perfect_depends">perfect_not_in_dependency</field>
            <field name="condition_select">python</field>
            <field name="condition_python">result = employee.cacobatph_affiliated == True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -R400 * (employee.cacobatph_patronage_contribution / 100)</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>

        <record id="salary_rule_cacobapth" model="hr.salary.rule">
            <field name="name">Cacobapth restraint</field>
            <field name="sequence" eval="520"/>
            <field name="code">R393</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = employee.cacobatph_affiliated == True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -R400 * (employee.cacobatph_services_funds_contribution / 100)</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>
      <!--******************************* TAXABLE ************************************-->
        <record id="salary_rule_allowance_meal" model="hr.salary.rule">
            <field name="name">Meal allowance</field>
            <field name="sequence" eval="510"/>
            <field name="code">R410</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_meal </field>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)

attendance_dependency = True if contract.allowance_meal_dependencies == 'abs_leave' else False
per_day = True if contract.allowance_meal_type == 'day' else False
calendar_paid = True if contract.allowance_meal_paid_in == 'calendar' else False
result =  rules.env['hr.salary.rule'].function_calculate_meal_transport(payslip.id,"allowance_meal",number_days,number_of_hours,per_day, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_meal_month_regulation_restraint" model="hr.salary.rule">
            <field name="name">Meal allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="521"/>
            <field name="code">R421</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I421 and inputs.I421.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I421.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_meal_month_regulation_gain" model="hr.salary.rule">
            <field name="name">Meal allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="522"/>
            <field name="code">R422</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I422 and inputs.I422.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I422.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_transportation_day" model="hr.salary.rule">
            <field name="name">Transportation allowance</field>
            <field name="sequence" eval="530"/>
            <field name="code">R430</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_transportation</field>
            <field name="smartest_attendance_depends">True</field>
             <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)

attendance_dependency = True if contract.allowance_transportation_dependencies == 'abs_leave' else False
per_day = True if contract.allowance_transportation_type == 'day' else False
calendar_paid = True if contract.allowance_transportation_paid_in == 'calendar' else False
result =  rules.env['hr.salary.rule'].function_calculate_meal_transport(payslip.id,"allowance_transportation",number_days,number_of_hours,per_day, attendance_dependency, calendar_paid)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_transportation_month_regulation_restraint" model="hr.salary.rule">
            <field name="name">Transportation allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="541"/>
            <field name="code">R441</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I441 and inputs.I441.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I441.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_transportation_month_regulation_gain" model="hr.salary.rule">
            <field name="name">Transportation allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="542"/>
            <field name="code">R442</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I442 and inputs.I442.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I442.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_phone" model="hr.salary.rule">
            <field name="name">Phone allowance</field>
            <field name="sequence" eval="870"/>
            <field name="code">R450</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_phone and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_phone_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_phone_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_phone_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_phone",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_phone_regulation_restraint" model="hr.salary.rule">
            <field name="name">Phone allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="871"/>
            <field name="code">R451</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I451 and inputs.I451.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I451.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_phone_regulation_gain" model="hr.salary.rule">
            <field name="name">Phone allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="872"/>
            <field name="code">R452</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I452 and inputs.I452.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I452.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_rent" model="hr.salary.rule">
            <field name="name">Rent allowance</field>
            <field name="sequence" eval="560"/>
            <field name="code">R460</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_rent and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_rent_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_rent_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_rent_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_rent",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_rent_regulation_restraint" model="hr.salary.rule">
            <field name="name">Rent allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="561"/>
            <field name="code">R461</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I461 and inputs.I461.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I461.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_rent_regulation_gain" model="hr.salary.rule">
            <field name="name">Rent allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="562"/>
            <field name="code">R462</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I462 and inputs.I462.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I462.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_clothing" model="hr.salary.rule">
            <field name="name">Clothing allowance</field>
            <field name="sequence" eval="570"/>
            <field name="code">R470</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_clothing and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_clothing_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_clothing_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_clothing_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_clothing",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_clothing_regulation_restraint" model="hr.salary.rule">
            <field name="name">Clothing allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="571"/>
            <field name="code">R471</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I471 and inputs.I471.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I471.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_clothing_regulation_gain" model="hr.salary.rule">
            <field name="name">Clothing allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="572"/>
            <field name="code">R472</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I472 and inputs.I472.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I472.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_vehicle" model="hr.salary.rule">
            <field name="name">Vehicle allowance</field>
            <field name="sequence" eval="580"/>
            <field name="code">R480</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_vehicle  and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_vehicle_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_vehicle_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_vehicle_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_vehicle",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_allowance_vehicle_regulation_restraint" model="hr.salary.rule">
            <field name="name">Vehicle allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="581"/>
            <field name="code">R481</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I481 and inputs.I481.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I481.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_vehicle_regulation_gain" model="hr.salary.rule">
            <field name="name">Vehicle allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="582"/>
            <field name="code">R482</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I482 and inputs.I482.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I482.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_irg_bareme" model="hr.salary.rule">
            <field name="name">IRG baréme</field>
            <field name="sequence" eval="710"/>
            <field name="code">R710</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = payslip.smartest_payslip_irg_type_applied=='bareme'</field>
            <field name="amount_select">code</field>
            <field name="smartest_is_irg">True</field>
            <field name="amount_python_compute">context = rules.env.context
smartest_case_perfect = context.get('smartest_case_perfect', False)
if not smartest_case_perfect and payslip.smartest_payslip_has_configurable_irg:
    irg=irg_amount =0

    payslip_with_configurable_irg  = payslip.input_line_ids.filtered(lambda input_line: input_line.smartest_configurable_irg)
    for line in payslip_with_configurable_irg:
        irg += (line.amount)
        irg_amount += - abs( line.smartest_manual_irg_amount)
    if worked_days.LEGAL_LEAVE :
        result = rules.env['hr.salary.rule'].calculate_irg_abs(payslip.id,categories.imp-irg*0.91)+ irg_amount
    else:
        result =rules.env['hr.salary.rule'].calculate_irg(categories.imp-irg*0.91,payslip.date_to)+irg_amount

elif not smartest_case_perfect and (  inputs.I00104 or   inputs.I00105 or   inputs.I00106 ):
                result = rules.env['hr.salary.rule'].calculate_irg_abs(payslip.id,categories.imp)

else:
                result = rules.env['hr.salary.rule'].calculate_irg(categories.imp,payslip.date_to)
</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_irg_restraint10" model="hr.salary.rule">
            <field name="name">IRG Restraint 10%</field>
            <field name="sequence" eval="721"/>
            <field name="code">R721</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.imp_10 </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.imp_10</field>
            <field name="quantity">-1</field>
            <field name="smartest_is_irg">True</field>
            <field name="amount_percentage" eval="10"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_irg_bareme_abs" model="hr.salary.rule">
            <field name="name">IRG</field>
            <field name="sequence" eval="720"/>
            <field name="code">R720</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
<field name="condition_python">result = payslip.smartest_payslip_irg_type_applied=='abs'</field>
            <field name="amount_select">code</field>
            <field name="smartest_is_irg">True</field>
            <field name="amount_python_compute">context = rules.env.context
smartest_case_perfect = context.get('smartest_case_perfect', False)
if not smartest_case_perfect and payslip.smartest_payslip_has_configurable_irg:
    irg=irg_amount =0
    payslip_with_configurable_irg  = payslip.input_line_ids.filtered(lambda input_line: input_line.smartest_configurable_irg)
    for line in payslip_with_configurable_irg:
        irg += (line.amount)
        irg_amount += - abs( line.smartest_manual_irg_amount)
    result = rules.env['hr.salary.rule'].calculate_irg_abs(payslip.id,(categories.imp-irg*0.91) ) + irg_amount
else:
    result = rules.env['hr.salary.rule'].calculate_irg_abs(payslip.id,categories.imp )</field>
            <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_irg10_regulation_restraint" model="hr.salary.rule">
            <field name="name">IRG restraint 10% regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="721"/>
            <field name="code">R607</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I607 and inputs.I607.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_percentage_base">result = abs(inputs.I607.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
 <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

            <field name="smartest_is_irg">True</field>
        </record>
        <record id="salary_rule_irg10_regulation_gain" model="hr.salary.rule">
            <field name="name">IRG restraint 10% regulation(+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="722"/>
            <field name="code">R608</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I608 and inputs.I608.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I608.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
 <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

            <field name="smartest_is_irg">True</field>
        </record>
                         <record id="salary_rule_employer_contribution_regulation_restraint" model="hr.salary.rule">
            <field name="name">Employer contribution restraint regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="506"/>
            <field name="code">R405</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
           <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I405 and inputs.I405.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I405.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
   </record>

        <record id="salary_rule_employer_contribution_regulation_gain" model="hr.salary.rule">
            <field name="name">Employer contribution restraint regulation(+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="506"/>
            <field name="code">R406</field>
            <field name="category_id" ref="smartest_hr_payroll.other_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I406 and inputs.I406.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I406.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
             <field name="appears_on_payslip" eval="True"/>
       </record>
                  <record id="salary_rule_contribution_regulation_restraint" model="hr.salary.rule">
            <field name="name">Contribution restraint regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="505"/>
            <field name="code">R402</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I402 and inputs.I402.amount) </field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(inputs.I402.amount)</field>
            <field name="quantity">1</field>
             <field name="amount_percentage" eval="9"/>
           <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
<field name="smartest_is_ss">True</field>
       </record>
           <record id="salary_rule_contribution_regulation_gain" model="hr.salary.rule">
           <field name="name">Contribution restraint regulation(+)</field>
<field name="smartest_is_regul">True</field>
           <field name="sequence" eval="505"/>
           <field name="code">R403</field>
           <field name="category_id" ref="smartest_hr_payroll.contribution_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I403 and inputs.I403.amount) </field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(inputs.I403.amount)</field>
            <field name="quantity">-1</field>
             <field name="amount_percentage" eval="9"/>
           <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
<field name="smartest_is_ss">True</field>
       </record>
                 <record id="salary_rule_contribution10_regulation_restraint" model="hr.salary.rule">
            <field name="name">contribution 10% regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="507"/>
            <field name="code">R408</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I408 and inputs.I408.amount) </field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(inputs.I408.amount)</field>
            <field name="quantity">1</field>
             <field name="amount_percentage" eval="9"/>
             <field name="smartest_is_ss">True</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

       </record>
        <record id="salary_rule_contribution10_regulation_gain" model="hr.salary.rule">
            <field name="name">contribution 10% regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="507"/>
            <field name="code">R409</field>
            <field name="category_id" ref="smartest_hr_payroll.contribution_10_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I409 and inputs.I409.amount) </field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(inputs.I409.amount)</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="9"/>
<field name="smartest_is_ss">True</field>
           <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>

       </record>
                <record id="salary_rule_irg_regulation_restraint" model="hr.salary.rule">
            <field name="name">IRG restraint regulation(-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="711"/>
            <field name="code">R602</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I602 and inputs.I602.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I602.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="smartest_is_irg">True</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>
        <record id="salary_rule_irg_regulation_gain" model="hr.salary.rule">
            <field name="name">IRG restraint regulation(+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="712"/>
            <field name="code">R603</field>
            <field name="category_id" ref="smartest_hr_payroll.taxable_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I603 and inputs.I603.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I603.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_is_irg">True</field>
        </record>
                <!--**************************** Non cotisables non imposables*******************************-->
        <record id="salary_rule_allowance_unique_salary" model="hr.salary.rule">
            <field name="name">Unique salary allowance</field>
            <field name="sequence" eval="810"/>
            <field name="code">R610</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_unique_salary and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_unique_salary_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_unique_salary_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_unique_salary_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_unique_salary",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_unique_salary_regulation_restraint" model="hr.salary.rule">
            <field name="name">Unique salary allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="811"/>
            <field name="code">R611</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I611 and inputs.I611.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I611.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_unique_salary_regulation_gain" model="hr.salary.rule">
            <field name="name">Unique salary allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="812"/>
            <field name="code">R612</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I612 and inputs.I612.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I612.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_displacement" model="hr.salary.rule">
            <field name="name">Displacement allowance</field>
            <field name="sequence" eval="820"/>
            <field name="code">R620</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_travel and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_travel_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_travel_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_travel_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_travel",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_displacement_regulation_restraint" model="hr.salary.rule">
            <field name="name">Displacement allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="810"/>
            <field name="code">R621</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I621 and inputs.I621.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I621.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>

        <record id="salary_rule_allowance_displacement_regulation_gain" model="hr.salary.rule">
            <field name="name">Displacement allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="810"/>
            <field name="code">R622</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I622 and inputs.I622.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I622.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>

        <record id="salary_rule_allowance_technicality" model="hr.salary.rule">
            <field name="name">Technicality allowance</field>
            <field name="sequence" eval="830"/>
            <field name="code">R630</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_technicality and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_technicality_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_technicality_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_technicality_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_technicality",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_technicality_regulation_restraint" model="hr.salary.rule">
            <field name="name">Technicality allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="831"/>
            <field name="code">R631</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I631 and inputs.I631.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I631.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
       <record id="salary_rule_allowance_technicality_regulation_gain" model="hr.salary.rule">
            <field name="name">Technicality allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="832"/>
            <field name="code">R632</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I632 and inputs.I632.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I632.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isolated_area" model="hr.salary.rule">
            <field name="name">Isolated area allowance</field>
            <field name="sequence" eval="840"/>
            <field name="code">R640</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_isolated_area and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_isolated_area_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_isolated_area_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_isolated_area_paid_in == 'calendar' else False
result = rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_isolated_area",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_attendance_depends">True</field>
            <field name="smartest_leave_depends">True</field>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isolated_area_regulation_restraint" model="hr.salary.rule">
            <field name="name">Isolated area allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="841"/>
            <field name="code">R641</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I641 and inputs.I641.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I641.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_isolated_area_regulation_gain" model="hr.salary.rule">
            <field name="name">Isolated area allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="842"/>
            <field name="code">R642</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I642 and inputs.I642.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I642.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_mission_expenses" model="hr.salary.rule">
            <field name="name">Mission expenses allowance</field>
            <field name="sequence" eval="850"/>
            <field name="code">R650</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I650 and inputs.I650.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I650.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
                <record id="salary_rule_allowance_mission_expenses_regulation_gain" model="hr.salary.rule">
            <field name="name">Mission expenses gain (+)</field>
            <field name="sequence" eval="810"/>
            <field name="code">R651</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I651 and inputs.I651.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I651.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>

        <record id="salary_rule_allowance_mission_expenses_regulation_restraint" model="hr.salary.rule">
            <field name="name">Mission expenses restrained (-)</field>
            <field name="sequence" eval="810"/>
            <field name="code">R652</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I652 and inputs.I652.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I652.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>

        <record id="salary_rule_advance_mission_expenses" model="hr.salary.rule">
            <field name="name">Mission expenses advance</field>
            <field name="sequence" eval="810"/>
            <field name="code">R655</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I655 and inputs.I655.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I655.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
       </record>

        <record id="salary_rule_advance_mission_expenses_regulation_gain" model="hr.salary.rule">
            <field name="name">Mission expenses advance gain (+)</field>
            <field name="sequence" eval="810"/>
            <field name="code">R656</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I656 and inputs.I656.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I656.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>

        <record id="salary_rule_advance_mission_expenses_regulation_restraint" model="hr.salary.rule">
            <field name="name">Mission expenses advance restrained (-)</field>
            <field name="sequence" eval="810"/>
            <field name="code">R657</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I657 and inputs.I657.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I657.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
       </record>


        <record id="restraint_per" model="hr.salary.rule">
             <field name="name">Restraint PER</field>
             <field name="sequence" eval="885"/>
             <field name="code">R675</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result =(inputs.I675 and inputs.I675.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -inputs.I675.amount</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
        </record>

         <record id="salary_rule_restraint_per_regulation_restraint" model="hr.salary.rule">
             <field name="name">Restraint PER regulation(-)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="885"/>
             <field name="code">R676</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I676 and inputs.I676.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I676.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
        </record>

         <record id="salary_rule_restraint_per_regulation_gain" model="hr.salary.rule">
             <field name="name">Restraint PER regulation(+)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="885"/>
             <field name="code">R677</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I677 and inputs.I677.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I677.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
         </record>

        <record id="salary_rule_allowance_scholarity" model="hr.salary.rule">
            <field name="name">Scholarity allowance</field>
            <field name="sequence" eval="860"/>
            <field name="code">R449</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I660 and inputs.I660.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I660.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_scholarity_regulation_restraint" model="hr.salary.rule">
            <field name="name">Scholarity allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="861"/>
            <field name="code">R661</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I661 and inputs.I661.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I661.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_scholarity_regulation_gain" model="hr.salary.rule">
            <field name="name">Scholarity allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="862"/>
            <field name="code">R662</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I662 and inputs.I662.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I662.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_mutuel" model="hr.salary.rule">
             <field name="name">mutuel allowance</field>
             <field name="sequence" eval="870"/>
             <field name="code">R670</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = contract.allowance_mutuel and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_mutuel_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_mutuel_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_mutuel_paid_in == 'calendar' else False
result = - rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_mutuel",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
         <record id="salary_rule_allowance_mutual_regulation_restraint" model="hr.salary.rule">
             <field name="name">mutual allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="871"/>
             <field name="code">R671</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I671 and inputs.I671.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I671.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_mutual_regulation_gain" model="hr.salary.rule">
             <field name="name">mutual allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
             <field name="sequence" eval="872"/>
             <field name="code">R672</field>
             <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I672 and inputs.I672.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I672.amount)</field>
                         <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_advance_on_wages" model="hr.salary.rule">
            <field name="name">Remboursement de l'avance</field>
            <field name="sequence" eval="885"/>
            <field name="code">R800</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I800 and inputs.I800.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I800.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_allowance_advance_on_wages_regulation_restraint" model="hr.salary.rule">
            <field name="name">Advance on wages regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="885"/>
            <field name="code">R811</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I801 and inputs.I801.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I801.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <record id="salary_rule_allowance_advance_on_wages_regulation_gain" model="hr.salary.rule">
            <field name="name">Advance on wages regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="890"/>
            <field name="code">R800</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I802 and inputs.I802.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I802.amount)</field>
            <field name="struct_id"
                   eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
                <record id="salary_rule_loan" model="hr.salary.rule">
            <field name="name">Loan</field>
            <field name="sequence" eval="885"/>
            <field name="code">R809</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I809 and inputs.I809.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I809.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
       </record>
        <record id="salary_rule_refund_loan" model="hr.salary.rule">
            <field name="name">Refund Loan</field>
            <field name="sequence" eval="886"/>
            <field name="code">R810</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = payslip.loan_refund_amount and payslip.loan_refund_amount &lt;= categories.net</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">payslip.loan_refund_amount</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="100"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_loan_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Loan allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="887"/>
            <field name="code">R810</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I811 and inputs.I811.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I811.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_loan_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Loan allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="890"/>
            <field name="code">R812</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I812 and inputs.I812.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I812.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_advance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Advance allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="891"/>
            <field name="code">R821</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I821 and inputs.I821.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I821.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_advance_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Advance allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="892"/>
            <field name="code">R822</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I822 and inputs.I822.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I822.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>

        <!--**************************** LOAN & ADVANCE *******************************-->
        <record id="salary_rule_refund_advance" model="hr.salary.rule">
            <field name="name">Refund Advance</field>
            <field name="sequence" eval="920"/>
            <field name="code">R820</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = payslip.advance_refund_amount and payslip.smartest_advance_refund_amount &lt;= categories.net</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">payslip.advance_refund_amount</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="100"/>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_rent" model="hr.salary.rule">
            <field name="name">Refund Rent</field>
            <field name="sequence" eval="930"/>
            <field name="code">R830</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_refund_rent and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">number_days = number_of_hours = 0
if inputs.I00104 :
                number_days+= inputs.I00104.amount
if inputs.I00105 :
                number_days+= inputs.I00105.amount
if inputs.I00106 :
                number_days+= -abs(inputs.I00106.amount)
if worked_days.ABS_HOURS and worked_days.ABS_HOURS.number_of_hours:
                number_of_hours += -abs( worked_days.ABS_HOURS.number_of_hours)
is_percentage = True if contract.allowance_refund_rent_type == 'percentage' else False
percentage_base = contract.wage if is_percentage else 0
attendance_dependency = True if contract.allowance_refund_rent_dependency == 'abs_leave' else False
calendar_paid = True if contract.allowance_refund_rent_paid_in == 'calendar' else False
result = - rules.env['hr.salary.rule'].function_calculate(payslip.id,"allowance_refund_rent",number_days,number_of_hours,is_percentage,100,percentage_base, attendance_dependency, calendar_paid)</field>

                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_rent_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Rent allowance regulation (-)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="931"/>
            <field name="code">R831</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I831 and inputs.I831.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I831.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
        <record id="salary_rule_refund_rent_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Rent allowance regulation (+)</field>
<field name="smartest_is_regul">True</field>
            <field name="sequence" eval="932"/>
            <field name="code">R832</field>
            <field name="category_id" ref="smartest_hr_payroll.ncni_category"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I832 and inputs.I832.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I832.amount)</field>
                        <field name="struct_id" eval="[Command.clear(), Command.link(ref('smartest_hr_payroll.structure_base_dz')),Command.link(ref('smartest_hr_payroll.structure_stc_dz'))]"/>
            <field name="smartest_date_from" eval="False"/>
        </record>
    </data>
</odoo>
