<?xml version="1.0" encoding="utf-8"?>
<odoo>


    <data noupdate="0">
        <!--***************** BASE, ABSENCE, GRO& NET *******************************-->
         <record id="salary_rule_base" model="hr.salary.rule">
            <field name="name">Base</field>
            <field name="sequence" eval="1"/>
            <field name="code">BASIC</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.wage</field>
            <field name="is_base_salary" eval="True"/>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>

       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>


        <record id="salary_rule_base_regulation_restraint" model="hr.salary.rule">
            <field name="name">Base regulation (-)</field>
            <field name="sequence" eval="2"/>
            <field name="code">R002</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I002 and inputs.I002.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I002.amount)</field>
            <field name="is_base_salary" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>
        <record id="salary_rule_base_regulation_gain" model="hr.salary.rule">
            <field name="name">Base regulation (+)</field>
            <field name="sequence" eval="3"/>
            <field name="code">R003</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I003 and inputs.I003.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I003.amount)</field>
            <field name="is_base_salary" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>

        <record id="salary_rule_pre_base" model="hr.salary.rule">
            <field name="name">Pre Base</field>
            <field name="sequence" eval="5"/>
            <field name="code">PRE_BASIC</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.pre_wage > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.pre_wage</field>
            <field name="is_base_salary" eval="True"/>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>

       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>


        <record id="salary_rule_pre_base_regulation_restraint" model="hr.salary.rule">
            <field name="name">Pre Base regulation (-)</field>
            <field name="sequence" eval="2"/>
            <field name="code">R006</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I006 and inputs.I006.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I006.amount)</field>
            <field name="is_base_salary" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>
        <record id="salary_rule_pre_base_regulation_gain" model="hr.salary.rule">
            <field name="name">Pre Base regulation (+)</field>
            <field name="sequence" eval="7"/>
            <field name="code">R007</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I007 and inputs.I007.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I007.amount)</field>
            <field name="is_base_salary" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="True"/>
       </record>

        <record id="salary_rule_absence" model="hr.salary.rule">
            <field name="name">Absence</field>
            <field name="sequence" eval="10"/>
            <field name="code">R010</field>
            <field name="category_id" ref="l10n_dz_payroll.HA"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = ((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
            <field name="amount_select">percentage</field>
            <field name="quantity">-((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
            <field name="amount_percentage_base">(contract.wage / (worked_days.WORK100.number_of_days if not contract.paid_hourly_attendance else worked_days.WORK100.number_of_hours))</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_absence_regulation_restraint" model="hr.salary.rule">
            <field name="name">Absence regulation (-)</field>
            <field name="sequence" eval="11"/>
            <field name="code">R011</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I011 and inputs.I011.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I012.amount)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_absence_regulation_gain" model="hr.salary.rule">
            <field name="name">Absence regulation (+)</field>
            <field name="sequence" eval="12"/>
            <field name="code">R012</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I012 and inputs.I012.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I012.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_absence_punish" model="hr.salary.rule">
             <field name="name">Absence punish</field>
             <field name="sequence" eval="23"/>
             <field name="code">R023</field>
             <field name="category_id" ref="l10n_dz_payroll.HA"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = ((worked_days.ABS_PNS and worked_days.ABS_PNS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS_PNS and worked_days.ABS_PNS.number_of_hours))</field>
             <field name="amount_select">percentage</field>
             <field name="quantity">-((worked_days.ABS_PNS and worked_days.ABS_PNS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS_PNS and worked_days.ABS_PNS.number_of_hours))</field>
             <field name="amount_percentage_base">(contract.wage / (worked_days.WORK100.number_of_days if not contract.paid_hourly_attendance else worked_days.WORK100.number_of_hours))</field>
             <field name="amount_percentage" eval="100"/>
             <field name="appears_on_payslip" eval="True"/>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>
         <record id="salary_rule_absence_punish_regulation_restraint" model="hr.salary.rule">
             <field name="name">Absence punish regulation (-)</field>
             <field name="sequence" eval="24"/>
             <field name="code">R024</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I024 and inputs.I024.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I024.amount)</field>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>
         <record id="salary_rule_absence_punish_regulation_gain" model="hr.salary.rule">
             <field name="name">Absence punish regulation (+)</field>
             <field name="sequence" eval="25"/>
             <field name="code">R025</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I025 and inputs.I025.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I025.amount)</field>

                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_sick_leave" model="hr.salary.rule">
            <field name="name">Sick Leave</field>
            <field name="sequence" eval="22"/>
            <field name="code">R022</field>
            <field name="category_id" ref="l10n_dz_payroll.HA"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (worked_days.LEAVE110 and worked_days.LEAVE110.number_of_days)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage / (worked_days.WORK100 and worked_days.WORK100.number_of_days)</field>
            <field name="quantity">-(worked_days.LEAVE110 and worked_days.LEAVE110.number_of_days)</field>
            <field name="amount_percentage" eval="100"/>

            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


          <record id="salary_rule_all_account_balance" model="hr.salary.rule">
            <field name="name">All account balance</field>
            <field name="sequence" eval="30"/>
            <field name="code">R030</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I030 and inputs.I030.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I030.amount)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

          <record id="paid_annual_leave" model="hr.salary.rule">
            <field name="name">Paid annual leave</field>
            <field name="sequence" eval="29"/>
            <field name="code">R029</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I029 and inputs.I029.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I029.amount)</field>
                   <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_paid_annual_leave_regulation_restraint" model="hr.salary.rule">
            <field name="name">Paid annual leave regulation(-)</field>
            <field name="sequence" eval="31"/>
            <field name="code">R031</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I031 and inputs.I031.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I031.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_paid_annual_leave_regulation_gain" model="hr.salary.rule">
            <field name="name">Paid annual leave regulation(+)</field>
            <field name="sequence" eval="32"/>
            <field name="code">R032</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I032 and inputs.I032.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I032.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="allowance_risk" model="hr.salary.rule">
             <field name="name">Allowance Risk</field>
             <field name="sequence" eval="35"/>
             <field name="code">R035</field>
             <field name="category_id" ref="l10n_dz_payroll.CI"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = contract.allowance_risk > 0</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_risk  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_risk  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

         <record id="salary_rule_allowance_risk_regulation_restraint" model="hr.salary.rule">
             <field name="name">Allowance Risk regulation(-)</field>
             <field name="sequence" eval="36"/>
             <field name="code">R036</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I036 and inputs.I036.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I036.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

         <record id="salary_rule_allowance_risk_regulation_gain" model="hr.salary.rule">
             <field name="name">Allowance Risk regulation(+)</field>
             <field name="sequence" eval="37"/>
             <field name="code">R037</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I037 and inputs.I037.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I037.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

        <record id="allowance_master_apprentice" model="hr.salary.rule">
             <field name="name">Allowance Master Apprentice</field>
             <field name="sequence" eval="40"/>
             <field name="code">R040</field>
             <field name="category_id" ref="l10n_dz_payroll.CI"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = contract.allowance_master_apprentice > 0</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_master_apprentice  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_master_apprentice  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

         <record id="salary_rule_allowance_master_apprentice_regulation_restraint" model="hr.salary.rule">
             <field name="name">Allowance Master Apprentice regulation(-)</field>
             <field name="sequence" eval="41"/>
             <field name="code">R041</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I041 and inputs.I041.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I041.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

         <record id="salary_rule_allowance_master_apprentice_regulation_gain" model="hr.salary.rule">
             <field name="name">Allowance master_apprentice regulation(+)</field>
             <field name="sequence" eval="42"/>
             <field name="code">R042</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I042 and inputs.I042.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I042.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_out_of_contract" model="hr.salary.rule">
             <field name="name">Out of contract</field>
             <field name="sequence" eval="45"/>
             <field name="code">R045</field>
             <field name="category_id" ref="l10n_dz_payroll.HA"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = ((worked_days.OUT and worked_days.OUT.number_of_days) if not contract.paid_hourly_attendance else (worked_days.OUT and worked_days.OUT.number_of_hours))</field>
             <field name="amount_select">percentage</field>
            <field name="quantity">-((worked_days.OUT and worked_days.OUT.number_of_days) if not contract.paid_hourly_attendance else (worked_days.OUT and worked_days.OUT.number_of_hours))</field>
             <field name="amount_percentage_base">(contract.wage / (worked_days.WORK100.number_of_days if not contract.paid_hourly_attendance else worked_days.WORK100.number_of_hours))</field>
             <field name="amount_percentage" eval="100"/>
             <field name="appears_on_payslip" eval="True"/>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_out_of_contract_regulation_restraint" model="hr.salary.rule">
             <field name="name">Out of contract regulation (-)</field>
             <field name="sequence" eval="46"/>
             <field name="code">R046</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I046 and inputs.I046.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I046.amount)</field>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>
         <record id="salary_rule_out_of_contract_regulation_gain" model="hr.salary.rule">
             <field name="name">Out of contract regulation (+)</field>
             <field name="sequence" eval="47"/>
             <field name="code">R047</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I047 and inputs.I047.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I047.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
        <field name="is_irg_base_salary" eval="False"/>
        <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_brut" model="hr.salary.rule">
            <field name="name">BRUT</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="500"/>
            <field name="code">R500</field>
            <field name="category_id" ref="hr_payroll.GROSS"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.HA + categories.CI + categories.NCI + categories.BASIC </field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

          <record id="salary_rule_training_tax" model="hr.salary.rule">
            <field name="name">Training tax</field>
            <field name="sequence" eval="900"/>
            <field name="code">R900</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="1"/>
            <field name="appears_on_payslip" eval="True"/>

            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
          <record id="salary_rule_learning_tax" model="hr.salary.rule">
            <field name="name">Learning tax</field>
            <field name="sequence" eval="910"/>
            <field name="code">R910</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="1"/>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_social_works_contribution" model="hr.salary.rule">
            <field name="name">Social works contribution</field>
            <field name="sequence" eval="920"/>
            <field name="code">R920</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">none</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R501</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="2"/>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

          <record id="salary_rule_employer_contribution" model="hr.salary.rule">
            <field name="name">Employer contribution restraint</field>
            <field name="sequence" eval="404"/>
            <field name="code">R404</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
           <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">baseCI10 = categories.CI10 if categories.CI10 > 0 else 0
baseCI  =  R400 if R400 > 0 else 0
result = -1 * (baseCI10 + baseCI) * (employee.cnas_patronage_contribution / 100)</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_employer_contribution_regulation_restraint" model="hr.salary.rule">
            <field name="name">Employer contribution restraint regulation(-)</field>
            <field name="sequence" eval="405"/>
            <field name="code">R405</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
             <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_CI10_DED) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">baseCI10 = abs(categories.RAPPEL_CI10_DED)
baseCI  =  abs(categories.RAPPEL_CI_DED)
result = (baseCI10 + baseCI ) * (employee.cnas_patronage_contribution / 100)</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_employer_contribution_regulation_gain" model="hr.salary.rule">
            <field name="name">Employer contribution restraint regulation(+)</field>
            <field name="sequence" eval="405"/>
            <field name="code">R406</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
             <field name="condition_select">python</field>
            <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_CI10_GAIN > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">baseCI10 = categories.RAPPEL_CI10_GAIN
baseCI  =  categories.RAPPEL_CI_GAIN
result = -1 * (baseCI10 + baseCI ) * (employee.cnas_patronage_contribution / 100)</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_contribution10" model="hr.salary.rule">
            <field name="name">Contribution restraint 10%</field>
            <field name="sequence" eval="407"/>
            <field name="code">R407</field>
            <field name="category_id" ref="l10n_dz_payroll.DED_CI10"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.CI10) > 0 </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(categories.CI10)</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="9"/>

            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_contribution10_regulation_restraint" model="hr.salary.rule">
            <field name="name">contribution 10% regulation (-)</field>
            <field name="sequence" eval="408"/>
            <field name="code">R408</field>
            <field name="category_id" ref="l10n_dz_payroll.Rappel_SS_CI10_DED"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI10_DED) > 0 or abs(categories.RAPPEL_NCI10_DED) >0</field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(categories.RAPPEL_CI10_DED + categories.RAPPEL_NCI10_DED)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="9"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_contribution10_regulation_gain" model="hr.salary.rule">
            <field name="name">contribution 10% regulation (+)</field>
            <field name="sequence" eval="409"/>
            <field name="code">R409</field>
            <field name="category_id" ref="l10n_dz_payroll.Rappel_SS_CI10_GAIN"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI10_GAIN) > 0 or abs(categories.RAPPEL_NCI10_GAIN) >0</field>
           <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(categories.RAPPEL_CI10_GAIN + categories.RAPPEL_NCI10_GAIN)</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="9"/>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


        <!--***************** COTISABLE *******************************-->

        <record id="salary_rule_allowance_responsibility" model="hr.salary.rule">
            <field name="name">Responsibility allowance</field>
            <field name="sequence" eval="210"/>
            <field name="code">R210</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_responsibility > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_responsibility  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_responsibility  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_responsibility_regulation_restraint" model="hr.salary.rule">
            <field name="name">Responsibility allowance regulation (-)</field>
            <field name="sequence" eval="211"/>
            <field name="code">R211</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I211 and inputs.I211.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I211.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_responsibility_regulation_gain" model="hr.salary.rule">
            <field name="name">Responsibility allowance regulation (+)</field>
            <field name="sequence" eval="212"/>
            <field name="code">R212</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I212 and inputs.I212.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I212.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_nuisance" model="hr.salary.rule">
            <field name="name">Nuisance allowance</field>
            <field name="sequence" eval="220"/>
            <field name="code">R220</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_nuisance > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.HA + categories.CI + categories.BASIC</field>
            <field name="quantity">contract.allowance_nuisance / 100</field>
            <field name="amount_percentage" eval="100"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_nuisance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Nuisance allowance regulation (-)</field>
            <field name="sequence" eval="221"/>
            <field name="code">R221</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I221 and inputs.I221.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I221.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_nuisance_regulation_gain" model="hr.salary.rule">
            <field name="name">Nuisance allowance regulation (+)</field>
            <field name="sequence" eval="222"/>
            <field name="code">R222</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I222 and inputs.I222.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I222.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_availability" model="hr.salary.rule">
            <field name="name">Availability allowance</field>
            <field name="sequence" eval="230"/>
            <field name="code">R230</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_availability > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_availability  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_availability  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_availability_regulation_restraint" model="hr.salary.rule">
            <field name="name">Availability allowance regulation (-)</field>
            <field name="sequence" eval="231"/>
            <field name="code">R231</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I231 and inputs.I231.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I231.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_availability_regulation_gain" model="hr.salary.rule">
            <field name="name">Availability allowance regulation (+)</field>
            <field name="sequence" eval="232"/>
            <field name="code">R232</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I232 and inputs.I232.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I232.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_in_iep" model="hr.salary.rule">
            <field name="name">IEP allowance (IN)</field>
            <field name="sequence" eval="240"/>
            <field name="code">R240</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = int((payslip.date_to - contract.first_contract_date).days/365) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">exp = int((payslip.date_to - contract.first_contract_date).days/365)
if exp > 31:
    exp = 31
iep = 0
if exp > 3:
    iep += (contract.wage * 3 /100)
    if exp > 6:
        iep += (contract.wage * (3*1.5) /100)
        if exp > 10:
            iep += (contract.wage * (4*2) /100)
            if exp > 15:
                iep += (contract.wage * (5*2.5) /100)
                if exp > 19:
                    iep += (contract.wage * (4*3.5) /100)
                    if exp >=20:
                       iep += (contract.wage * ((exp-19)*4) /100)
                else:
                    iep += (contract.wage * ((exp-15)*3.5) /100)
            else:
                iep += (contract.wage * ((exp-10)*2.5) /100)
        else:
            iep += (contract.wage * ((exp-6)*2) /100)
    else:
        iep += (contract.wage * ((exp-3) * 1.5) /100)
else:
    iep += (contract.wage * (exp * 1) /100)
result = iep</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_in_iep_regulation_restraint" model="hr.salary.rule">
            <field name="name">IEP allowance (IN) allowance regulation (-)</field>
            <field name="sequence" eval="241"/>
            <field name="code">R241</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I241 and inputs.I241.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I241.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_in_iep_regulation_gain" model="hr.salary.rule">
            <field name="name">IEP allowance (IN) allowance regulation (+)</field>
            <field name="sequence" eval="242"/>
            <field name="code">R242</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I242 and inputs.I242.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I242.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_out_iep" model="hr.salary.rule">
            <field name="name">IEP allowance (OUT)</field>
            <field name="sequence" eval="250"/>
            <field name="code">R250</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_out_iep > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">exp = int(contract.allowance_out_iep )
if exp > 15:
    exp = 15
iep = 0
percent = 0
if exp > 3:
    iep += (contract.wage * 3/2 /100)
    percent += 3
    if exp > 6:
        iep += (contract.wage * (3*1.5)/2 /100)
        percent += 3
        if exp > 10:
            iep += (contract.wage * (4*2)/2 /100)
            percent += 4
            if exp > 15:
                iep += (contract.wage * (4*2.5)/2 /100)
                percent += 4
            else:
                iep += (contract.wage * ((exp-10)*2.5)/2 /100)
                percent += (exp-10)
        else:
            iep += (contract.wage * ((exp-6)*2)/2 /100)
            percent += (exp-6)
    else:
        iep += (contract.wage * ((exp-3) * 1.5)/2 /100)
        percent += (exp-3)
else:
    iep += (contract.wage * (exp * 1)/2 /100)
iep = iep
result = iep</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_out_iep_regulation_restraint" model="hr.salary.rule">
            <field name="name">IEP allowance (OUT) allowance regulation (-)</field>
            <field name="sequence" eval="251"/>
            <field name="code">R251</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I251 and inputs.I251.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I251.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_out_iep_regulation_gain" model="hr.salary.rule">
            <field name="name">IEP allowance (OUT) allowance regulation (+)</field>
            <field name="sequence" eval="252"/>
            <field name="code">R252</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I252 and inputs.I252.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I252.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_isp" model="hr.salary.rule">
            <field name="name">ISP allowance</field>
            <field name="sequence" eval="260"/>
            <field name="code">R260</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_isp > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.HA + categories.CI + categories.BASIC</field>
            <field name="quantity">contract.allowance_isp / 100</field>
            <field name="amount_percentage" eval="100"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_isp_regulation_restraint" model="hr.salary.rule">
            <field name="name">ISP allowance regulation (-)</field>
            <field name="sequence" eval="261"/>
            <field name="code">R261</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I261 and inputs.I261.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I261.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_isp_regulation_gain" model="hr.salary.rule">
            <field name="name">ISP allowance regulation (+)</field>
            <field name="sequence" eval="262"/>
            <field name="code">R262</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I262 and inputs.I262.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I262.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_performance" model="hr.salary.rule">
            <field name="name">Performance allowance</field>
            <field name="sequence" eval="270"/>
            <field name="code">R270</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_soiling > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_soiling  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_soiling  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_performance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Performance allowance regulation (-)</field>
            <field name="sequence" eval="271"/>
            <field name="code">R271</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I271 and inputs.I271.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I271.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_performance_regulation_gain" model="hr.salary.rule">
            <field name="name">Performance allowance regulation (+)</field>
            <field name="sequence" eval="272"/>
            <field name="code">R272</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I272 and inputs.I272.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I272.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_additional_hours_50" model="hr.salary.rule">
            <field name="name">Additional Hours (50%)</field>
            <field name="sequence" eval="280"/>
            <field name="code">R280</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (worked_days.H50 and worked_days.H50.number_of_hours) > 0 and worked_days.WORK100</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage / (worked_days.WORK100 and worked_days.WORK100.number_of_hours)</field>
            <field name="quantity">(worked_days.H50 and worked_days.H50.number_of_hours)</field>
            <field name="amount_percentage" eval="150"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_50_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (50%) allowance regulation (-)</field>
            <field name="sequence" eval="281"/>
            <field name="code">R281</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I281 and inputs.I281.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I281.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_50_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (50%) allowance regulation (+)</field>
            <field name="sequence" eval="282"/>
            <field name="code">R282</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I282 and inputs.I282.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I282.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_additional_hours_75" model="hr.salary.rule">
            <field name="name">Additional Hours (75%)</field>
            <field name="sequence" eval="285"/>
            <field name="code">R285</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (worked_days.H75 and worked_days.H75.number_of_hours) > 0 and worked_days.WORK100</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage / (worked_days.WORK100 and worked_days.WORK100.number_of_hours)</field>
            <field name="quantity">(worked_days.H75 and worked_days.H75.number_of_hours)</field>
            <field name="amount_percentage" eval="175"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_75_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (75%) allowance regulation (-)</field>
            <field name="sequence" eval="286"/>
            <field name="code">R286</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I286 and inputs.I286.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I286.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_75_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (75%) allowance regulation (+)</field>
            <field name="sequence" eval="287"/>
            <field name="code">R287</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I287 and inputs.I287.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I287.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_additional_hours_100" model="hr.salary.rule">
            <field name="name">Additional Hours (100%)</field>
            <field name="sequence" eval="290"/>
            <field name="code">R290</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (worked_days.H100 and worked_days.H100.number_of_hours) > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.wage / (worked_days.WORK100 and worked_days.WORK100.number_of_hours)</field>
            <field name="quantity">(worked_days.H100 and worked_days.H100.number_of_hours)</field>
            <field name="amount_percentage" eval="200"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_100_regulation_restraint" model="hr.salary.rule">
            <field name="name">Additional Hours (100%) allowance regulation (-)</field>
            <field name="sequence" eval="291"/>
            <field name="code">R291</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I291 and inputs.I291.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I291.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_additional_hours_100_regulation_gain" model="hr.salary.rule">
            <field name="name">Additional Hours (100%) allowance regulation (+)</field>
            <field name="sequence" eval="292"/>
            <field name="code">R292</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I292 and inputs.I292.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I292.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pop" model="hr.salary.rule">
            <field name="name">P.O.P allowance</field>
            <field name="sequence" eval="300"/>
            <field name="code">R300</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_pop > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_pop  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_pop  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pop_regulation_restraint" model="hr.salary.rule">
            <field name="name">P.O.P allowance regulation (-)</field>
            <field name="sequence" eval="301"/>
            <field name="code">R301</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I301 and inputs.I301.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I301.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pop_regulation_gain" model="hr.salary.rule">
            <field name="name">P.O.P allowance regulation (+)</field>
            <field name="sequence" eval="302"/>
            <field name="code">R302</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I302 and inputs.I302.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I302.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pap" model="hr.salary.rule">
            <field name="name">P.A.P allowance</field>
            <field name="sequence" eval="310"/>
            <field name="code">R310</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_pap > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_pap  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_pap  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>


                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pap_regulation_restraint" model="hr.salary.rule">
            <field name="name">P.A.P allowance regulation (-)</field>
            <field name="sequence" eval="311"/>
            <field name="code">R311</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I311 and inputs.I311.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I311.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_pap_regulation_gain" model="hr.salary.rule">
            <field name="name">P.A.P allowance regulation (+)</field>
            <field name="sequence" eval="312"/>
            <field name="code">R312</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I312 and inputs.I312.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I312.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_hse" model="hr.salary.rule">
            <field name="name">H.S.E allowance</field>
            <field name="sequence" eval="320"/>
            <field name="code">R320</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_hse > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_hse  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_hse  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>


                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_hse_regulation_restraint" model="hr.salary.rule">
            <field name="name">H.S.E allowance regulation (-)</field>
            <field name="sequence" eval="321"/>
            <field name="code">R321</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I321 and inputs.I321.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I321.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_hse_regulation_gain" model="hr.salary.rule">
            <field name="name">H.S.E allowance regulation (+)</field>
            <field name="sequence" eval="322"/>
            <field name="code">R322</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I322 and inputs.I322.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I322.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_iff" model="hr.salary.rule">
            <field name="name">I.F.F allowance</field>
            <field name="sequence" eval="330"/>
            <field name="code">R330</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_iff > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_iff  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_iff  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_iff_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.F.F allowance regulation (-)</field>
            <field name="sequence" eval="331"/>
            <field name="code">R331</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I331 and inputs.I331.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I331.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_iff_regulation_gain" model="hr.salary.rule">
            <field name="name">I.F.F allowance regulation (+)</field>
            <field name="sequence" eval="332"/>
            <field name="code">R332</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I332 and inputs.I332.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I332.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_ifsp" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance</field>
            <field name="sequence" eval="340"/>
            <field name="code">R340</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_ifsp > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_ifsp  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_ifsp  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>


                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_ifsp_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance regulation (-)</field>
            <field name="sequence" eval="341"/>
            <field name="code">R341</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I341 and inputs.I341.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I341.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_ifsp_regulation_gain" model="hr.salary.rule">
            <field name="name">I.F.S.P allowance regulation (+)</field>
            <field name="sequence" eval="342"/>
            <field name="code">R342</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I342 and inputs.I342.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I342.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_itp" model="hr.salary.rule">
            <field name="name">I.T.P allowance</field>
            <field name="sequence" eval="350"/>
            <field name="code">R350</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_itp > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=contract.allowance_itp
else:
    result = ((contract.allowance_itp  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours)))
</field>


                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_itp_regulation_restraint" model="hr.salary.rule">
            <field name="name">I.T.P allowance regulation (-)</field>
            <field name="sequence" eval="351"/>
            <field name="code">R351</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I351 and inputs.I351.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I351.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_itp_regulation_gain" model="hr.salary.rule">
            <field name="name">I.T.P allowance regulation (+)</field>
            <field name="sequence" eval="352"/>
            <field name="code">R352</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I352 and inputs.I352.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I352.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

           <record id="salary_rule_allowance_cash" model="hr.salary.rule">
            <field name="name">Cash allowance</field>
            <field name="sequence" eval="353"/>
            <field name="code">R353</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_cash > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_cash  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_cash  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>
               <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_cash_regulation_restraint" model="hr.salary.rule">
            <field name="name">Cash allowance regulation (-)</field>
            <field name="sequence" eval="351"/>
            <field name="code">R354</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I354 and inputs.I354.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I354.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_cash_regulation_gain" model="hr.salary.rule">
            <field name="name">Cash allowance regulation (+)</field>
            <field name="sequence" eval="354"/>
            <field name="code">R355</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I355 and inputs.I355.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I355.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_allowance_interim" model="hr.salary.rule">
            <field name="name">Interim allowance</field>
            <field name="sequence" eval="356"/>
            <field name="code">R356</field>
            <field name="category_id" ref="l10n_dz_payroll.CI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I356 and inputs.I356.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I356.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_interim_regulation_restraint" model="hr.salary.rule">
            <field name="name">Interim allowance regulation (-)</field>
            <field name="sequence" eval="357"/>
            <field name="code">R357</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I357 and inputs.I354.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I357.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_interim_regulation_gain" model="hr.salary.rule">
            <field name="name">Interim allowance regulation (+)</field>
            <field name="sequence" eval="358"/>
            <field name="code">R358</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I358 and inputs.I358.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I358.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_bonus" model="hr.salary.rule">
            <field name="name">Yield allowance </field>
            <field name="sequence" eval="360"/>
            <field name="code">R360</field>
            <field name="category_id" ref="l10n_dz_payroll.CI10"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I360 and inputs.I360.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I360.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_bonus_regulation_restraint" model="hr.salary.rule">
            <field name="name">Yield allowance regulation (-)</field>
            <field name="sequence" eval="361"/>
            <field name="code">R361</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci10_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I361 and inputs.I361.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I361.amount)</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_bonus_regulation_gain" model="hr.salary.rule">
            <field name="name">Yield allowance regulation (+)</field>
            <field name="sequence" eval="362"/>
            <field name="code">R362</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci10_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I362 and inputs.I362.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I362.amount)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_inventory" model="hr.salary.rule">
            <field name="name">Inventory allowance </field>
            <field name="sequence" eval="363"/>
            <field name="code">R363</field>
            <field name="category_id" ref="l10n_dz_payroll.CI10"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I363 and inputs.I363.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I363.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_inventory_regulation_restraint" model="hr.salary.rule">
            <field name="name">Inventory allowance regulation (-)</field>
            <field name="sequence" eval="364"/>
            <field name="code">R364</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci10_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I364 and inputs.I364.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I364.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_inventory_regulation_gain" model="hr.salary.rule">
            <field name="name">Inventory allowance regulation (+)</field>
            <field name="sequence" eval="365"/>
            <field name="code">R365</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ci10_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I365 and inputs.I365.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I365.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_exceptional" model="hr.salary.rule">
            <field name="name">Exceptional allowance </field>
            <field name="sequence" eval="415"/>
            <field name="code">R415</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI10"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I415 and inputs.I415.amount)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base"> abs(inputs.I415.amount)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_exceptional_regulation_restraint" model="hr.salary.rule">
            <field name="name">Exceptional allowance regulation (-)</field>
            <field name="sequence" eval="416"/>
            <field name="code">R416</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci10_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I416 and inputs.I416.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I416.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_exceptional_regulation_gain" model="hr.salary.rule">
            <field name="name">Exceptional allowance regulation (+)</field>
            <field name="sequence" eval="417"/>
            <field name="code">R417</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci10_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I417 and inputs.I417.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I417.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


        <record id="salary_rule_total_gross" model="hr.salary.rule">
            <field name="name">Total Gross</field>
            <field name="sequence" eval="369"/>
            <field name="code">GROSS</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.CI_ALL + categories.HA + categories.CI10 + categories.BASIC + categories.RAPPEL_CI10_DED + categories.RAPPEL_CI10_GAIN</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="True"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_contribution_base" model="hr.salary.rule">
            <field name="name">Contribution restraint base </field>
            <field name="sequence" eval="400"/>
            <field name="code">R400</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.CI + categories.HA + categories.BASIC</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="appears_on_payslip" eval="False"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_contribution" model="hr.salary.rule">
            <field name="name">Contribution restraint</field>
            <field name="sequence" eval="401"/>
            <field name="code">R401</field>
            <field name="category_id" ref="l10n_dz_payroll.DED_SS"/>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R400 if R400 > 0 else 0</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="9"/>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
          <record id="salary_rule_contribution_regulation_restraint" model="hr.salary.rule">
            <field name="name">Contribution restraint regulation(-)</field>
            <field name="sequence" eval="402"/>
            <field name="code">R402</field>
            <field name="category_id" ref="l10n_dz_payroll.DED_SS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">abs(categories.RAPPEL_CI_DED)</field>
            <field name="quantity">1</field>
            <field name="amount_percentage" eval="9"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
           <record id="salary_rule_contribution_regulation_gain" model="hr.salary.rule">
           <field name="name">Contribution restraint regulation(+)</field>
           <field name="sequence" eval="403"/>
           <field name="code">R403</field>
           <field name="category_id" ref="l10n_dz_payroll.DED_SS"/>
           <field name="condition_select">python</field>
           <field name="condition_python">result = abs(categories.RAPPEL_CI_GAIN) > 0</field>
           <field name="amount_select">percentage</field>
           <field name="amount_percentage_base">abs(categories.RAPPEL_CI_GAIN)</field>
           <field name="quantity">-1</field>
           <field name="amount_percentage" eval="9"/>
           <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <!--**************************** TAXABLE *******************************-->
        <record id="salary_rule_allowance_meal_day" model="hr.salary.rule">
            <field name="name">Meal allowance</field>
            <field name="sequence" eval="410"/>
            <field name="code">R410</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_meal > 0 and contract.allowance_meal_type == 'day' and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=contract.allowance_meal * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days))
else: result=contract.allowance_meal * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours))</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_meal_month" model="hr.salary.rule">
            <field name="name">Meal allowance</field>
            <field name="sequence" eval="420"/>
            <field name="code">R420</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_meal > 0 and contract.allowance_meal_type == 'month' and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result = ((contract.allowance_meal / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_meal  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>


         <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_meal_month_regulation_restraint" model="hr.salary.rule">
            <field name="name">Meal allowance regulation (-)</field>
            <field name="sequence" eval="421"/>
            <field name="code">R421</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I421 and inputs.I421.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I421.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_meal_month_regulation_gain" model="hr.salary.rule">
            <field name="name">Meal allowance regulation (+)</field>
            <field name="sequence" eval="422"/>
            <field name="code">R422</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I422 and inputs.I422.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I422.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_transportation_day" model="hr.salary.rule">
            <field name="name">Transportation allowance</field>
            <field name="sequence" eval="430"/>
            <field name="code">R430</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_transportation > 0 and contract.allowance_transportation_type == 'day' and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=contract.allowance_transportation * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days))
else: result=contract.allowance_transportation * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours))</field>

                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_transportation_month" model="hr.salary.rule">
            <field name="name">Transportation allowance</field>
            <field name="sequence" eval="440"/>
            <field name="code">R440</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_transportation > 0 and contract.allowance_transportation_type == 'month' and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result = ((contract.allowance_transportation / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days)- (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_transportation  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>

             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_transportation_month_regulation_restraint" model="hr.salary.rule">
            <field name="name">Transportation allowance regulation (-)</field>
            <field name="sequence" eval="441"/>
            <field name="code">R441</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I441 and inputs.I441.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I421.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_transportation_month_regulation_gain" model="hr.salary.rule">
            <field name="name">Transportation allowance regulation (+)</field>
            <field name="sequence" eval="442"/>
            <field name="code">R442</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I442 and inputs.I442.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I442.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_phone" model="hr.salary.rule">
            <field name="name">Phone allowance</field>
            <field name="sequence" eval="450"/>
            <field name="code">R450</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
             <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_phone > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_phone  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_phone  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_phone_regulation_restraint" model="hr.salary.rule">
            <field name="name">Phone allowance regulation (-)</field>
            <field name="sequence" eval="451"/>
            <field name="code">R451</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I451 and inputs.I451.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I451.amount)</field>


                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_phone_regulation_gain" model="hr.salary.rule">
            <field name="name">Phone allowance regulation (+)</field>
            <field name="sequence" eval="452"/>
            <field name="code">R452</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I452 and inputs.I452.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I452.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_allowance_rent" model="hr.salary.rule">
            <field name="name">Rent allowance</field>
            <field name="sequence" eval="460"/>
            <field name="code">R460</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_rent > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_rent  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_rent  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_rent_regulation_restraint" model="hr.salary.rule">
            <field name="name">Rent allowance regulation (-)</field>
            <field name="sequence" eval="461"/>
            <field name="code">R461</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I461 and inputs.I461.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I461.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_rent_regulation_gain" model="hr.salary.rule">
            <field name="name">Rent allowance regulation (+)</field>
            <field name="sequence" eval="462"/>
            <field name="code">R462</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I462 and inputs.I462.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I462.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_allowance_clothing" model="hr.salary.rule">
            <field name="name">Clothing allowance</field>
            <field name="sequence" eval="470"/>
            <field name="code">R470</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
              <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_clothing > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_clothing  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_clothing  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_clothing_regulation_restraint" model="hr.salary.rule">
            <field name="name">Clothing allowance regulation (-)</field>
            <field name="sequence" eval="471"/>
            <field name="code">R471</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I471 and inputs.I471.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I471.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_clothing_regulation_gain" model="hr.salary.rule">
            <field name="name">Clothing allowance regulation (+)</field>
            <field name="sequence" eval="472"/>
            <field name="code">R472</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I472 and inputs.I472.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I472.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
<!-- ****************************************************Vehicle rule***********************-->
          <record id="salary_rule_allowance_vehicle" model="hr.salary.rule">
            <field name="name">Vehicle allowance</field>
            <field name="sequence" eval="480"/>
            <field name="code">R480</field>
            <field name="category_id" ref="l10n_dz_payroll.NCI"/>
              <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_vehicle > 0 and worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_vehicle  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_vehicle  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))
</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_allowance_vehicle_regulation_restraint" model="hr.salary.rule">
            <field name="name">Vehicle allowance regulation (-)</field>
            <field name="sequence" eval="481"/>
            <field name="code">R481</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I481 and inputs.I481.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I481.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_vehicle_regulation_gain" model="hr.salary.rule">
            <field name="name">Vehicle allowance regulation (+)</field>
            <field name="sequence" eval="482"/>
            <field name="code">R482</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_nci_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I482 and inputs.I482.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I482.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


<!--*****************************************************Vehicle rule*************************-->

        <record id="salary_rule_irg_base" model="hr.salary.rule">
            <field name="name">IRG Base</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="505"/>
            <field name="code">R505</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =((not (worked_days.ABS and worked_days.ABS.number_of_days)) and not contract.paid_hourly_attendance) or ((not (worked_days.ABS and worked_days.ABS.number_of_hours)) and contract.paid_hourly_attendance)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">base= R500 + R401
result = int(base / 10) * 10</field>

           <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_irg_base_abs" model="hr.salary.rule">
            <field name="name">IRG Base Abs</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="506"/>
            <field name="code">R506</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.HA &lt; 0</field>
           <field name="amount_select">code</field>
            <field name="amount_python_compute">base= R500 + R401
result = int(base / 10) * 10</field>
    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


              <record id="salary_rule_irg_base_rapp_gain" model="hr.salary.rule">
            <field name="name">IRG Base Rapp(+)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="507"/>
            <field name="code">R507</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
           <field name="amount_select">code</field>
            <field name="amount_python_compute">base_SS = R402 if abs(categories.RAPPEL_CI_DED) > 0 else 0
base= abs(categories.RAPPEL_CI_DED) + abs(categories.RAPPEL_NCI_DED) + base_SS
var = int (base / 10 ) if base > 0 else 0
result = var * 10</field>
           <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
              </record>

         <record id="salary_rule_irg_base_rapp_ded" model="hr.salary.rule">
            <field name="name">IRG Base Rapp(-)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="508"/>
            <field name="code">R508</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
             <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_NCI_GAIN > 0</field>
           <field name="amount_select">code</field>
            <field name="amount_python_compute">base_SS = R403 if abs(categories.RAPPEL_CI_GAIN) > 0 else 0
base= categories.RAPPEL_CI_GAIN + categories.RAPPEL_NCI_GAIN + base_SS
var = int (base / 10 ) if base > 0 else 0
result = var * 10</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
         </record>

        <record id="salary_rule_irg" model="hr.salary.rule">
            <field name="name">IRG</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="510"/>
            <field name="code">R510</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =((not (worked_days.ABS and worked_days.ABS.number_of_days)) and not contract.paid_hourly_attendance) or ((not (worked_days.ABS and worked_days.ABS.number_of_hours)) and contract.paid_hourly_attendance)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = 0 if R505 &lt;= 30000 else ((R505 - 20000) * 23/100 if R505 &lt;= 40000 else ((R505 - 40000) * 27/100 + 4600 if R505 &lt;= 80000 else ((R505 - 80000) * 30/100 + 15400 if R505 &lt;= 160000 else ((R505 - 160000) * 33/100 + 39400 if R505 &lt;= 320000 else (R505 - 320000) * 35/100 + 92200))))</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>
        <record id="salary_rule_irg_abs" model="hr.salary.rule">
            <field name="name">IRG abs</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="511"/>
            <field name="code">R511</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = ((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = 0 if R506 &lt;= 30000 else ((R506 - 20000) * 23/100 if R506 &lt;= 40000 else ((R506 - 40000) * 27/100 + 4600 if R506 &lt;= 80000 else ((R506 - 80000) * 30/100 + 15400 if R506 &lt;= 160000 else ((R506 - 160000) * 33/100 + 39400 if R506 &lt;= 320000 else (R506 - 320000) * 35/100 + 92200))))</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_irg_rapp_gain" model="hr.salary.rule">
            <field name="name">IRG Rappel(+)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="512"/>
            <field name="code">R512</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = 0 if R507 &lt;= 30000 else ((R507 - 20000) * 23/100 if R507 &lt;= 40000 else ((R507 - 40000) * 27/100 + 4600 if R507 &lt;= 80000 else ((R507 - 80000) * 30/100 + 15400 if R507 &lt;= 160000 else ((R507 - 160000) * 33/100 + 39400 if R507 &lt;= 320000 else (R507 - 320000) * 35/100 + 92200))))</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_irg_rapp_ded" model="hr.salary.rule">
            <field name="name">IRG Rappel(-)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="513"/>
            <field name="code">R513</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_GAIN) > 0 or abs(categories.RAPPEL_NCI_GAIN) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = 0 if R508 &lt;= 30000 else ((R508 - 20000) * 23/100 if R508 &lt;= 40000 else ((R508 - 40000) * 27/100 + 4600 if R508 &lt;= 80000 else ((R508 - 80000) * 30/100 + 15400 if R508 &lt;= 160000 else ((R508 - 160000) * 33/100 + 39400 if R508 &lt;= 320000 else (R508 - 320000) * 35/100 + 92200))))</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_irg_abattement_base" model="hr.salary.rule">
            <field name="name">IRG Abattement Base</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="520"/>
            <field name="code">R520</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =((not (worked_days.ABS and worked_days.ABS.number_of_days)) and not contract.paid_hourly_attendance) or ((not (worked_days.ABS and worked_days.ABS.number_of_hours)) and contract.paid_hourly_attendance)</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">R510</field>
            <field name="amount_percentage" eval="40"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
         <record id="salary_rule_irg_abattement_base_abs" model="hr.salary.rule">
            <field name="name">IRG Abattement Base Abs</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="521"/>
            <field name="code">R521</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = ((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
             <field name="amount_select">code</field>
           <field name="amount_python_compute">result = R511 * (40 / 100)</field>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


         <record id="salary_rule_irg_abattement_base_rapp_gain" model="hr.salary.rule">
            <field name="name">IRG Abattement Base Rappel(+)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="522"/>
            <field name="code">R522</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
             <field name="amount_select">code</field>
           <field name="amount_python_compute">result = R512 * (40 / 100)</field>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_irg_abattement_base_rapp_ded" model="hr.salary.rule">
            <field name="name">IRG Abattement Base Rappel(-)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="523"/>
            <field name="code">R523</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_NCI_GAIN > 0</field>
             <field name="amount_select">code</field>
           <field name="amount_python_compute">result = R513 * (40 / 100)</field>
                     <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_irg_abattement" model="hr.salary.rule">
            <field name="name">IRG Abattement</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="530"/>
            <field name="code">R530</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =((not (worked_days.ABS and worked_days.ABS.number_of_days)) and not contract.paid_hourly_attendance) or ((not (worked_days.ABS and worked_days.ABS.number_of_hours)) and contract.paid_hourly_attendance)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = R520 if (1000 &lt;= abs(R520)  &lt;= 1500) else (1000 if abs(R520) &lt; 1000 else 1500)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_irg_abattement_abs" model="hr.salary.rule">
            <field name="name">IRG Abattement Abs</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="531"/>
            <field name="code">R531</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = ((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = R521 if (1000 &lt;= abs(R521)  &lt;= 1500) else (1000 if abs(R521) &lt; 1000 else 1500)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


       <record id="salary_rule_irg_abattement_rapp_gain" model="hr.salary.rule">
            <field name="name">IRG Abattement Rappel(+)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="532"/>
            <field name="code">R532</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = R522 if (1000 &lt;= abs(R522)  &lt;= 1500) else (1000 if abs(R522) &lt; 1000 else 1500)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

       <record id="salary_rule_irg_abattement_rapp_ded" model="hr.salary.rule">
            <field name="name">IRG Abattement Rappel(-)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="533"/>
            <field name="code">R533</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_NCI_GAIN > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = R523 if (1000 &lt;= abs(R523)  &lt;= 1500) else (1000 if abs(R523) &lt; 1000 else 1500)</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <!--        **************************************-->
        <record id="salary_rule_irg_additional_abattement" model="hr.salary.rule">
            <field name="name">IRG Additional Abattement</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="540"/>
            <field name="code">R540</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result =((not (worked_days.ABS and worked_days.ABS.number_of_days)) and not contract.paid_hourly_attendance) or ((not (worked_days.ABS and worked_days.ABS.number_of_hours)) and contract.paid_hourly_attendance)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(((R510-R530)*137/51)-(27925/8),2) if (R505 > 30000 and R505 &lt; 35000) else 0
            </field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>
        <record id="salary_rule_irg_additional_abattement_abs" model="hr.salary.rule">
            <field name="name">IRG Additional Abattement Abs</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="541"/>
            <field name="code">R541</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = ((worked_days.ABS and worked_days.ABS.number_of_days) if not contract.paid_hourly_attendance else (worked_days.ABS and worked_days.ABS.number_of_hours))</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(((R511-R531)*137/51)-(27925/8),2) if (R506 > 30000 and R506 &lt; 35000) else 0</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>


        <record id="salary_rule_irg_additional_abattement_rapp_gain" model="hr.salary.rule">
            <field name="name">IRG Additional Abattement Rappel(+)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="542"/>
            <field name="code">R542</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(((R512-R532)*137/51)-(27925/8),2) if (R507 > 30000 and R507 &lt; 35000) else 0</field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>

        <record id="salary_rule_irg_additional_abattement_rapp_ded" model="hr.salary.rule">
            <field name="name">IRG Additional Abattement Rappel(-)</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="543"/>
            <field name="code">R543</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_NCI_GAIN > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(((R513-R533)*137/51)-(27925/8),2) if (R508 > 30000 and R508 &lt; 35000) else 0 </field>
            <field name="struct_id"
                   eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>
        <!--        ***************************************-->

        <record id="salary_rule_irg_restraint" model="hr.salary.rule">
            <field name="name">IRG Restraint</field>
            <field name="sequence" eval="600"/>
            <field name="code">R600</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.HA >= 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">tmp = -(R510-R530) if (R510-R530) > 0 else 0
result = -R540 if (30000 &lt; R505  &lt; 35000)  else tmp</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_irg_restraint_abs" model="hr.salary.rule">
            <field name="name">IRG Restraint Abs</field>
            <field name="sequence" eval="601"/>
            <field name="code">R601</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.HA &lt; 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">Base_retenue_SS = (categories.CI2 + categories.BASIC)
Retenue_SS = (-1 * (Base_retenue_SS if Base_retenue_SS > 0 else 0) * 9 / 100)
Assiette_Cotisable =  categories.CI2 + categories.NCI2 + categories.BASIC2
Base_IRG = Assiette_Cotisable + Retenue_SS
IRG = 0 if Base_IRG &lt;= 30000 else ((Base_IRG - 20000) * 23/100 if Base_IRG &lt;= 40000 else ((Base_IRG - 40000) * 27/100 + 4600 if Base_IRG &lt;= 80000 else ((Base_IRG - 80000) * 30/100 + 15400 if Base_IRG &lt;= 160000 else ((Base_IRG - 160000) * 33/100 + 39400 if Base_IRG &lt;= 320000 else (Base_IRG - 320000) * 35/100 + 92200))))
if IRG == 0:
    result = 0
else:
    Base_abattement_IRG = IRG *40/100
    Abattement_IRG = Base_abattement_IRG if (1000 &lt;= abs(Base_abattement_IRG)  &lt;= 1500) else (1000 if abs(Base_abattement_IRG) &lt; 1000 else 1500)
    Base_abattement_suplementaire_IRG = IRG-Abattement_IRG
    IRG_normale = round(((Base_abattement_suplementaire_IRG*137/51)-(27925/8)),2) if (Base_IRG > 30000 and Base_IRG &lt; 35000) else Base_abattement_suplementaire_IRG
    result = -((IRG_normale * R506) / Base_IRG)
</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_irg_regulation_restraint" model="hr.salary.rule">
            <field name="name">IRG restraint regulation(-)</field>
            <field name="sequence" eval="602"/>
            <field name="code">R602</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
           <field name="condition_select">python</field>
            <field name="condition_python">result = categories.RAPPEL_CI_GAIN > 0 or categories.RAPPEL_NCI_GAIN > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">#PART 1 => IRG
Base_retenue_SS = (categories.CI2 + categories.BASIC)
Retenue_SS = (-1 * (Base_retenue_SS if Base_retenue_SS > 0 else 0) * 9 / 100)
Assiette_Cotisable =  categories.CI2 + categories.NCI2 + categories.BASIC2
BASE_IRG = Assiette_Cotisable + Retenue_SS
BASE_IRG_ALL = BASE_IRG + R508

IRG_ALL = 0 if BASE_IRG_ALL &lt;= 30000 else ((BASE_IRG_ALL - 20000) * 23/100 if BASE_IRG_ALL &lt;= 40000 else ((BASE_IRG_ALL - 40000) * 27/100 + 4600 if BASE_IRG_ALL &lt;= 80000 else ((BASE_IRG_ALL - 80000) * 30/100 + 15400 if BASE_IRG_ALL &lt;= 160000 else ((BASE_IRG_ALL - 160000) * 33/100 + 39400 if BASE_IRG_ALL &lt;= 320000 else (BASE_IRG_ALL - 320000) * 35/100 + 92200))))

IRG_OK = 0 if BASE_IRG &lt;= 30000 else ((BASE_IRG - 20000) * 23/100 if BASE_IRG &lt;= 40000 else ((BASE_IRG - 40000) * 27/100 + 4600 if BASE_IRG &lt;= 80000 else ((BASE_IRG - 80000) * 30/100 + 15400 if BASE_IRG &lt;= 160000 else ((BASE_IRG - 160000) * 33/100 + 39400 if BASE_IRG &lt;= 320000 else (BASE_IRG - 320000) * 35/100 + 92200))))

#PART 2 => ABATEMENT
IRG40_ALL = IRG_ALL * (40 / 100)
IRG40_OK = IRG_OK * (40 / 100)

ABAT_IRG_ALL = IRG40_ALL if (1000 &lt;= abs(IRG40_ALL)  &lt;= 1500) else (1000 if abs(IRG40_ALL) &lt; 1000 else 1500)
ABAT_IRG_OK = IRG40_OK if (1000 &lt;= abs(IRG40_OK)  &lt;= 1500) else (1000 if abs(IRG40_OK) &lt; 1000 else 1500)

#PART3 => ABATEMENT_SUPP
SUPP_ABAT_IRG_ALL = round(((IRG_ALL-ABAT_IRG_ALL)*137/51)-(27925/8),2) if (BASE_IRG_ALL > 30000 and BASE_IRG_ALL &lt; 35000) else 0
SUPP_ABAT_IRG_OK = round(((IRG_OK-ABAT_IRG_OK)*137/51)-(27925/8),2) if (BASE_IRG > 30000 and BASE_IRG &lt; 35000) else 0

#PART4: RESULTS
ALL = -(IRG_ALL-ABAT_IRG_ALL) if (IRG_ALL-ABAT_IRG_ALL) > 0 else 0
ALL_2 = -SUPP_ABAT_IRG_ALL
result_ALL = ALL_2 if (30000 >= BASE_IRG_ALL &lt; 35000)  else ALL

OK = -(IRG_OK-ABAT_IRG_OK) if (IRG_OK-ABAT_IRG_OK) > 0 else 0
OK_2 = -SUPP_ABAT_IRG_OK
result_OK = OK_2 if (30000 >=BASE_IRG  &lt; 35000)  else OK

result = result_ALL - result_OK</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
             <record id="salary_rule_irg_regulation_gain" model="hr.salary.rule">
            <field name="name">IRG restraint regulation(+)</field>
            <field name="sequence" eval="603"/>
            <field name="code">R603</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
           <field name="condition_select">python</field>
            <field name="condition_python">result = abs(categories.RAPPEL_CI_DED) > 0 or abs(categories.RAPPEL_NCI_DED) > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">tmp = (R512-R532) if (R512-R532) > 0 else 0
tmp_2 = R542
result = tmp_2 if (30000 &lt; R507  &lt; 35000)  else tmp</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

         <record id="salary_rule_irg10_regulation_restraint" model="hr.salary.rule">
            <field name="name">IRG restraint 10% regulation(-)</field>
            <field name="sequence" eval="607"/>
            <field name="code">R607</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
           <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I607 and inputs.I607.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_percentage_base">result = abs(inputs.I607.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
             <record id="salary_rule_irg10_regulation_gain" model="hr.salary.rule">
            <field name="name">IRG restraint 10% regulation(+)</field>
            <field name="sequence" eval="608"/>
            <field name="code">R608</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I608 and inputs.I608.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I608.amount)</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


         <record id="salary_rule_irg_restraint10" model="hr.salary.rule">
            <field name="name">IRG Restraint 10%</field>
            <field name="sequence" eval="606"/>
            <field name="code">R606</field>
            <field name="category_id" ref="l10n_dz_payroll.irg_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.CI10 > 0 or categories.NCI10 > 0 </field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">categories.CI10 + categories.NCI10 + categories.DED_CI10</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="10"/>
            <field name="appears_on_payslip" eval="True"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <!--**************************** Non cotisables non imposables*******************************-->

        <record id="salary_rule_allowance_unique_salary" model="hr.salary.rule">
            <field name="name">Unique salary allowance</field>
            <field name="sequence" eval="610"/>
            <field name="code">R610</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_unique_salary > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_unique_salary  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_unique_salary  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
                    <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_unique_salary_regulation_restraint" model="hr.salary.rule">
            <field name="name">Unique salary allowance regulation (-)</field>
            <field name="sequence" eval="611"/>
            <field name="code">R611</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I611 and inputs.I611.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I611.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_unique_salary_regulation_gain" model="hr.salary.rule">
            <field name="name">Unique salary allowance regulation (+)</field>
            <field name="sequence" eval="612"/>
            <field name="code">R612</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I612 and inputs.I612.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I612.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
        <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>


        <record id="salary_rule_allowance_displacement" model="hr.salary.rule">
            <field name="name">Displacement allowance</field>
            <field name="sequence" eval="620"/>
            <field name="code">R620</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_travel > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_travel  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_travel  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_displacement_regulation_restraint" model="hr.salary.rule">
            <field name="name">Displacement allowance regulation (-)</field>
            <field name="sequence" eval="621"/>
            <field name="code">R621</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I621 and inputs.I621.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I621.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_displacement_regulation_gain" model="hr.salary.rule">
            <field name="name">Displacement allowance regulation (+)</field>
            <field name="sequence" eval="622"/>
            <field name="code">R622</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I622 and inputs.I622.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I622.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_technicality" model="hr.salary.rule">
            <field name="name">Technicality allowance</field>
            <field name="sequence" eval="630"/>
            <field name="code">R630</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_technicality > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result=((contract.allowance_technicality  / worked_days.WORK100.number_of_days) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_days)  - (worked_days.ABS and  worked_days.ABS.number_of_days) - (worked_days.OUT and  worked_days.OUT.number_of_days) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days)))
else:
    result = ((contract.allowance_technicality  / worked_days.WORK100.number_of_hours) * ((worked_days.WORK100 and  worked_days.WORK100.number_of_hours) - (worked_days.ABS and  worked_days.ABS.number_of_hours) - (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours)))</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_technicality_regulation_restraint" model="hr.salary.rule">
            <field name="name">Technicality allowance regulation (-)</field>
            <field name="sequence" eval="631"/>
            <field name="code">R631</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I631 and inputs.I631.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I631.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_allowance_technicality_regulation_gain" model="hr.salary.rule">
            <field name="name">Technicality allowance regulation (+)</field>
            <field name="sequence" eval="632"/>
            <field name="code">R632</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I632 and inputs.I632.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I632.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

       <record id="salary_rule_allowance_isolated_area" model="hr.salary.rule">
            <field name="name">Isolated area allowance</field>
            <field name="sequence" eval="640"/>
            <field name="code">R640</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_isolated_area > 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if not contract.paid_hourly_attendance:
    result = (contract.allowance_isolated_area * ((worked_days.WORK100 and worked_days.WORK100.number_of_days) - (worked_days.ABS and worked_days.ABS.number_of_days)- (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_days))) / contract.days_per_month
else:
    result = (contract.allowance_isolated_area * ((worked_days.WORK100 and worked_days.WORK100.number_of_hours) - (worked_days.ABS and worked_days.ABS.number_of_hours)- (worked_days.LEAVE110 and  worked_days.LEAVE110.number_of_hours))) / contract.hours_per_month</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_isolated_area_regulation_restraint" model="hr.salary.rule">
            <field name="name">Isolated area allowance regulation (-)</field>
            <field name="sequence" eval="641"/>
            <field name="code">R641</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I641 and inputs.I641.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I641.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_allowance_isolated_area_regulation_gain" model="hr.salary.rule">
            <field name="name">Isolated area allowance regulation (+)</field>
            <field name="sequence" eval="642"/>
            <field name="code">R642</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I642 and inputs.I642.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I642.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_mission_expenses" model="hr.salary.rule">
            <field name="name">Mission expenses allowance</field>
            <field name="sequence" eval="650"/>
            <field name="code">R650</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I650 and inputs.I650.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I650.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_scholarity" model="hr.salary.rule">
            <field name="name">Scholarity allowance</field>
            <field name="sequence" eval="660"/>
            <field name="code">R660</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I660 and inputs.I660.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I660.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_scholarity_regulation_restraint" model="hr.salary.rule">
            <field name="name">Scholarity allowance regulation (-)</field>
            <field name="sequence" eval="661"/>
            <field name="code">R661</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I661 and inputs.I661.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I661.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_allowance_scholarity_regulation_gain" model="hr.salary.rule">
            <field name="name">Scholarity allowance regulation (+)</field>
            <field name="sequence" eval="662"/>
            <field name="code">R662</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I662 and inputs.I662.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I662.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_allowance_mutuel" model="hr.salary.rule">
             <field name="name">mutuel allowance</field>
             <field name="sequence" eval="670"/>
             <field name="code">R670</field>
             <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = contract.allowance_mutuel > 0</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -(contract.allowance_mutuel)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>

         <record id="salary_rule_allowance_mutual_regulation_restraint" model="hr.salary.rule">
             <field name="name">mutual allowance regulation (-)</field>
             <field name="sequence" eval="671"/>
             <field name="code">R671</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I671 and inputs.I671.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = -abs(inputs.I671.amount)</field>
              <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>
        <record id="salary_rule_allowance_mutual_regulation_gain" model="hr.salary.rule">
             <field name="name">mutual allowance regulation (+)</field>
             <field name="sequence" eval="672"/>
             <field name="code">R672</field>
             <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
             <field name="condition_select">python</field>
             <field name="condition_python">result = (inputs.I672 and inputs.I672.amount)</field>
             <field name="amount_select">code</field>
             <field name="amount_python_compute">result = abs(inputs.I672.amount)</field>
              <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
            <field name="is_post_salary" eval="False"/>
            <field name="is_irg_base_salary" eval="False"/>
            <field name="is_base_salary" eval="False"/>
        </record>


        <!--**************************** LOAN & ADVANCE *******************************-->
        <record id="salary_rule_allowance_advance_on_wages" model="hr.salary.rule">
            <field name="name">Advance on wages allowance</field>
            <field name="sequence" eval="800"/>
            <field name="code">R800</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I800 and inputs.I800.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I800.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_refund_loan" model="hr.salary.rule">
            <field name="name">Refund Loan</field>
            <field name="sequence" eval="810"/>
            <field name="code">R810</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = payslip.loan_refund_amount and payslip.loan_refund_amount &lt;= categories.NET</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">payslip.loan_refund_amount</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_refund_loan_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Loan allowance regulation (-)</field>
            <field name="sequence" eval="811"/>
            <field name="code">R811</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I811 and inputs.I811.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I811.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_refund_loan_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Loan allowance regulation (+)</field>
            <field name="sequence" eval="812"/>
            <field name="code">R812</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I812 and inputs.I812.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I812.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_refund_advance" model="hr.salary.rule">
            <field name="name">Refund Advance</field>
            <field name="sequence" eval="820"/>
            <field name="code">R820</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = payslip.advance_refund_amount and payslip.advance_refund_amount &lt;= categories.NET</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">payslip.advance_refund_amount</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_refund_advance_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Advance allowance regulation (-)</field>
            <field name="sequence" eval="821"/>
            <field name="code">R821</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I821 and inputs.I821.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I821.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_refund_advance_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Advance allowance regulation (+)</field>
            <field name="sequence" eval="822"/>
            <field name="code">R822</field>
            <field name="category_id" ref="l10n_dz_payroll.HS"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I822 and inputs.I822.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I822.amount)</field>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
        <record id="salary_rule_refund_rent" model="hr.salary.rule">
            <field name="name">Refund Rent</field>
            <field name="sequence" eval="830"/>
            <field name="code">R830</field>
            <field name="category_id" ref="l10n_dz_payroll.NCNI"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.allowance_refund_rent > 0</field>
            <field name="amount_select">percentage</field>
            <field name="amount_percentage_base">contract.allowance_refund_rent</field>
            <field name="quantity">-1</field>
            <field name="amount_percentage" eval="100"/>
            <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>

        <record id="salary_rule_refund_rent_regulation_restraint" model="hr.salary.rule">
            <field name="name">Refund Rent allowance regulation (-)</field>
            <field name="sequence" eval="831"/>
            <field name="code">R831</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_ded"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I831 and inputs.I831.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = -abs(inputs.I831.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_refund_rent_regulation_gain" model="hr.salary.rule">
            <field name="name">Refund Rent allowance regulation (+)</field>
            <field name="sequence" eval="832"/>
            <field name="code">R832</field>
            <field name="category_id" ref="l10n_dz_payroll.rappel_ncni_gain"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = (inputs.I832 and inputs.I832.amount)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = abs(inputs.I832.amount)</field>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="False"/>
       <field name="is_base_salary" eval="False"/>
       </record>
       <record id="salary_rule_net_taxable" model="hr.salary.rule">
            <field name="name">Net taxable</field>
            <field name="appears_on_payslip" eval="False"/>
            <field name="sequence" eval="501"/>
            <field name="code">R501</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result =  categories.HA + categories.CI_ALL + categories.CI10 + categories.RAPPEL_CI10_DED + categories.RAPPEL_CI10_GAIN + categories.NCI10 + categories.RAPPEL_NCI10_DED + categories.RAPPEL_NCI10_GAIN + categories.NCI_ALL + categories.DED_SS + categories.DED_CI10 +categories.Rappel_SS_CI10_DED+ categories.Rappel_SS_CI10_GAIN</field>
            <field name="appears_on_payslip" eval="True"/>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>
       <field name="is_post_salary" eval="False"/>
       <field name="is_irg_base_salary" eval="True"/>
       <field name="is_base_salary" eval="False"/>
       </record>

<!--         ***********************************Net salary******************-->
         <record id="salary_rule_net" model="hr.salary.rule">
            <field name="name">NET</field>
            <field name="sequence" eval="999"/>
            <field name="code">NET</field>
            <field name="category_id" ref="l10n_dz_payroll.others"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = R501 + categories.IRG_DED + categories.NCNI + categories.HS</field>
            <field name="is_net_salary" eval="True"/>
             <field name="struct_id"  eval="[(5, 0), (4, ref('l10n_dz_payroll.structure_base_dz')),(4, ref('l10n_dz_payroll.structure_stc_dz'))]"/>

             <field name="appears_on_payslip" eval="True"/>
             <field name="is_post_salary" eval="False"/>
             <field name="is_irg_base_salary" eval="False"/>
             <field name="is_base_salary" eval="False"/>
       </record>

    </data>
</odoo>